// Generated from CASC.g4 by ANTLR 4.7.2

package io.github.chaosunity.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CASCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		CLASS=32, FUNC=33, VARIABLE=34, IF=35, ELSE=36, RETURN=37, FOR=38, FROM=39, 
		TO=40, UNTIL=41, PRINT=42, PRINTLN=43, PLUS=44, MINUS=45, STAR=46, SLASH=47, 
		EQUALS=48, GREATER=49, LESS=50, GREATER_EQ=51, LESS_EQ=52, EQ=53, NOT_EQ=54, 
		NUMBER=55, STRING=56, BOOL=57, ID=58, QUALIFIED_NAME=59, WS=60;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "CHAR", "DIGIT", 
			"UNICODE", "CLASS", "FUNC", "VARIABLE", "IF", "ELSE", "RETURN", "FOR", 
			"FROM", "TO", "UNTIL", "PRINT", "PRINTLN", "PLUS", "MINUS", "STAR", "SLASH", 
			"EQUALS", "GREATER", "LESS", "GREATER_EQ", "LESS_EQ", "EQ", "NOT_EQ", 
			"NUMBER", "STRING", "BOOL", "ID", "QUALIFIED_NAME", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "'}'", "'('", "','", "')'", "':'", "'='", "'boolean'", "'\u5E03\u6797'", 
			"'['", "']'", "'string'", "'\u5B57\u4E32'", "'char'", "'\u5B57\u5143'", 
			"'byte'", "'\u4F4D\u5143'", "'short'", "'\u77ED\u6574\u6578'", "'int'", 
			"'\u6574\u6578'", "'long'", "'\u9577\u6574\u6578'", "'float'", "'\u6D6E\u9EDE\u6578'", 
			"'double'", "'\u500D\u6D6E\u9EDE\u6578'", "'void'", "'\u7A7A'", "'\u8CE6'", 
			"'?'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, "CLASS", "FUNC", "VARIABLE", 
			"IF", "ELSE", "RETURN", "FOR", "FROM", "TO", "UNTIL", "PRINT", "PRINTLN", 
			"PLUS", "MINUS", "STAR", "SLASH", "EQUALS", "GREATER", "LESS", "GREATER_EQ", 
			"LESS_EQ", "EQ", "NOT_EQ", "NUMBER", "STRING", "BOOL", "ID", "QUALIFIED_NAME", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CASCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CASC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>\u01b8\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b"+
		"\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20"+
		"\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\5!\u00f5"+
		"\n!\3\"\3\"\3#\3#\3$\3$\3$\3$\3$\3$\3$\5$\u0102\n$\3%\3%\3%\3%\3%\3%\5"+
		"%\u010a\n%\3&\3&\3&\3&\3&\5&\u0111\n&\3\'\3\'\3\'\3\'\5\'\u0117\n\'\3"+
		"(\3(\3(\3(\3(\3(\5(\u011f\n(\3)\3)\3)\3)\3)\3)\3)\3)\5)\u0129\n)\3*\3"+
		"*\3*\3*\3*\5*\u0130\n*\3+\3+\3+\3+\3+\5+\u0137\n+\3,\3,\3,\5,\u013c\n"+
		",\3-\3-\3-\3-\3-\3-\3-\5-\u0145\n-\3.\3.\3.\3.\3.\3.\3.\5.\u014e\n.\3"+
		"/\3/\3/\3/\3/\3/\3/\3/\3/\3/\5/\u015a\n/\3\60\3\60\3\61\3\61\3\62\3\62"+
		"\3\63\3\63\3\64\3\64\3\65\3\65\3\65\5\65\u0169\n\65\3\66\3\66\3\66\5\66"+
		"\u016e\n\66\3\67\3\67\3\67\3\67\3\67\5\67\u0175\n\67\38\38\38\38\38\5"+
		"8\u017c\n8\39\39\39\59\u0181\n9\3:\3:\3:\3:\5:\u0187\n:\3;\6;\u018a\n"+
		";\r;\16;\u018b\3<\3<\7<\u0190\n<\f<\16<\u0193\13<\3<\3<\3=\3=\3=\3=\3"+
		"=\3=\3=\3=\3=\3=\3=\5=\u01a2\n=\3>\3>\3>\6>\u01a7\n>\r>\16>\u01a8\3?\3"+
		"?\3?\6?\u01ae\n?\r?\16?\u01af\3@\6@\u01b3\n@\r@\16@\u01b4\3@\3@\2\2A\3"+
		"\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37"+
		"\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37="+
		" ?!A\2C\2E\2G\"I#K$M%O&Q\'S(U)W*Y+[,]-_.a/c\60e\61g\62i\63k\64m\65o\66"+
		"q\67s8u9w:y;{<}=\177>\3\2\13\4\2C\\c|\4\2--\u52a2\u52a2\5\2//\u6e1d\u6e1d"+
		"\u8ca2\u8ca2\4\2,,\u4e5a\u4e5a\4\2\61\61\u9666\u9666\4\2??\u8ce8\u8ce8"+
		"\4\2\60\60\62;\5\2\f\f\17\17$$\5\2\13\f\17\17\"\"\2\u01d0\2\3\3\2\2\2"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]"+
		"\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2"+
		"\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2"+
		"\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\3\u0081\3\2"+
		"\2\2\5\u0083\3\2\2\2\7\u0085\3\2\2\2\t\u0087\3\2\2\2\13\u0089\3\2\2\2"+
		"\r\u008b\3\2\2\2\17\u008d\3\2\2\2\21\u008f\3\2\2\2\23\u0097\3\2\2\2\25"+
		"\u009a\3\2\2\2\27\u009c\3\2\2\2\31\u009e\3\2\2\2\33\u00a5\3\2\2\2\35\u00a8"+
		"\3\2\2\2\37\u00ad\3\2\2\2!\u00b0\3\2\2\2#\u00b5\3\2\2\2%\u00b8\3\2\2\2"+
		"\'\u00be\3\2\2\2)\u00c2\3\2\2\2+\u00c6\3\2\2\2-\u00c9\3\2\2\2/\u00ce\3"+
		"\2\2\2\61\u00d2\3\2\2\2\63\u00d8\3\2\2\2\65\u00dc\3\2\2\2\67\u00e3\3\2"+
		"\2\29\u00e8\3\2\2\2;\u00ed\3\2\2\2=\u00ef\3\2\2\2?\u00f1\3\2\2\2A\u00f4"+
		"\3\2\2\2C\u00f6\3\2\2\2E\u00f8\3\2\2\2G\u0101\3\2\2\2I\u0109\3\2\2\2K"+
		"\u0110\3\2\2\2M\u0116\3\2\2\2O\u011e\3\2\2\2Q\u0128\3\2\2\2S\u012f\3\2"+
		"\2\2U\u0136\3\2\2\2W\u013b\3\2\2\2Y\u0144\3\2\2\2[\u014d\3\2\2\2]\u0159"+
		"\3\2\2\2_\u015b\3\2\2\2a\u015d\3\2\2\2c\u015f\3\2\2\2e\u0161\3\2\2\2g"+
		"\u0163\3\2\2\2i\u0168\3\2\2\2k\u016d\3\2\2\2m\u0174\3\2\2\2o\u017b\3\2"+
		"\2\2q\u0180\3\2\2\2s\u0186\3\2\2\2u\u0189\3\2\2\2w\u018d\3\2\2\2y\u01a1"+
		"\3\2\2\2{\u01a6\3\2\2\2}\u01aa\3\2\2\2\177\u01b2\3\2\2\2\u0081\u0082\7"+
		"}\2\2\u0082\4\3\2\2\2\u0083\u0084\7\177\2\2\u0084\6\3\2\2\2\u0085\u0086"+
		"\7*\2\2\u0086\b\3\2\2\2\u0087\u0088\7.\2\2\u0088\n\3\2\2\2\u0089\u008a"+
		"\7+\2\2\u008a\f\3\2\2\2\u008b\u008c\7<\2\2\u008c\16\3\2\2\2\u008d\u008e"+
		"\7?\2\2\u008e\20\3\2\2\2\u008f\u0090\7d\2\2\u0090\u0091\7q\2\2\u0091\u0092"+
		"\7q\2\2\u0092\u0093\7n\2\2\u0093\u0094\7g\2\2\u0094\u0095\7c\2\2\u0095"+
		"\u0096\7p\2\2\u0096\22\3\2\2\2\u0097\u0098\7\u5e05\2\2\u0098\u0099\7\u6799"+
		"\2\2\u0099\24\3\2\2\2\u009a\u009b\7]\2\2\u009b\26\3\2\2\2\u009c\u009d"+
		"\7_\2\2\u009d\30\3\2\2\2\u009e\u009f\7u\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1"+
		"\7t\2\2\u00a1\u00a2\7k\2\2\u00a2\u00a3\7p\2\2\u00a3\u00a4\7i\2\2\u00a4"+
		"\32\3\2\2\2\u00a5\u00a6\7\u5b59\2\2\u00a6\u00a7\7\u4e34\2\2\u00a7\34\3"+
		"\2\2\2\u00a8\u00a9\7e\2\2\u00a9\u00aa\7j\2\2\u00aa\u00ab\7c\2\2\u00ab"+
		"\u00ac\7t\2\2\u00ac\36\3\2\2\2\u00ad\u00ae\7\u5b59\2\2\u00ae\u00af\7\u5145"+
		"\2\2\u00af \3\2\2\2\u00b0\u00b1\7d\2\2\u00b1\u00b2\7{\2\2\u00b2\u00b3"+
		"\7v\2\2\u00b3\u00b4\7g\2\2\u00b4\"\3\2\2\2\u00b5\u00b6\7\u4f4f\2\2\u00b6"+
		"\u00b7\7\u5145\2\2\u00b7$\3\2\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba\7j\2"+
		"\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7t\2\2\u00bc\u00bd\7v\2\2\u00bd&\3\2"+
		"\2\2\u00be\u00bf\7\u77ef\2\2\u00bf\u00c0\7\u6576\2\2\u00c0\u00c1\7\u657a"+
		"\2\2\u00c1(\3\2\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5"+
		"\7v\2\2\u00c5*\3\2\2\2\u00c6\u00c7\7\u6576\2\2\u00c7\u00c8\7\u657a\2\2"+
		"\u00c8,\3\2\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb\7q\2\2\u00cb\u00cc\7p\2"+
		"\2\u00cc\u00cd\7i\2\2\u00cd.\3\2\2\2\u00ce\u00cf\7\u9579\2\2\u00cf\u00d0"+
		"\7\u6576\2\2\u00d0\u00d1\7\u657a\2\2\u00d1\60\3\2\2\2\u00d2\u00d3\7h\2"+
		"\2\u00d3\u00d4\7n\2\2\u00d4\u00d5\7q\2\2\u00d5\u00d6\7c\2\2\u00d6\u00d7"+
		"\7v\2\2\u00d7\62\3\2\2\2\u00d8\u00d9\7\u6d70\2\2\u00d9\u00da\7\u9ee0\2"+
		"\2\u00da\u00db\7\u657a\2\2\u00db\64\3\2\2\2\u00dc\u00dd\7f\2\2\u00dd\u00de"+
		"\7q\2\2\u00de\u00df\7w\2\2\u00df\u00e0\7d\2\2\u00e0\u00e1\7n\2\2\u00e1"+
		"\u00e2\7g\2\2\u00e2\66\3\2\2\2\u00e3\u00e4\7\u500f\2\2\u00e4\u00e5\7\u6d70"+
		"\2\2\u00e5\u00e6\7\u9ee0\2\2\u00e6\u00e7\7\u657a\2\2\u00e78\3\2\2\2\u00e8"+
		"\u00e9\7x\2\2\u00e9\u00ea\7q\2\2\u00ea\u00eb\7k\2\2\u00eb\u00ec\7f\2\2"+
		"\u00ec:\3\2\2\2\u00ed\u00ee\7\u7a7c\2\2\u00ee<\3\2\2\2\u00ef\u00f0\7\u8ce8"+
		"\2\2\u00f0>\3\2\2\2\u00f1\u00f2\7A\2\2\u00f2@\3\2\2\2\u00f3\u00f5\t\2"+
		"\2\2\u00f4\u00f3\3\2\2\2\u00f5B\3\2\2\2\u00f6\u00f7\4\62;\2\u00f7D\3\2"+
		"\2\2\u00f8\u00f9\4\u0082\1\2\u00f9F\3\2\2\2\u00fa\u00fb\7e\2\2\u00fb\u00fc"+
		"\7n\2\2\u00fc\u00fd\7c\2\2\u00fd\u00fe\7u\2\2\u00fe\u0102\7u\2\2\u00ff"+
		"\u0100\7\u9860\2\2\u0100\u0102\7\u5227\2\2\u0101\u00fa\3\2\2\2\u0101\u00ff"+
		"\3\2\2\2\u0102H\3\2\2\2\u0103\u0104\7h\2\2\u0104\u0105\7w\2\2\u0105\u0106"+
		"\7p\2\2\u0106\u010a\7e\2\2\u0107\u0108\7\u51ff\2\2\u0108\u010a\7\u5f11"+
		"\2\2\u0109\u0103\3\2\2\2\u0109\u0107\3\2\2\2\u010aJ\3\2\2\2\u010b\u010c"+
		"\7x\2\2\u010c\u010d\7c\2\2\u010d\u0111\7t\2\2\u010e\u010f\7\u8b8c\2\2"+
		"\u010f\u0111\7\u657a\2\2\u0110\u010b\3\2\2\2\u0110\u010e\3\2\2\2\u0111"+
		"L\3\2\2\2\u0112\u0113\7k\2\2\u0113\u0117\7h\2\2\u0114\u0115\7\u5984\2"+
		"\2\u0115\u0117\7\u679e\2\2\u0116\u0112\3\2\2\2\u0116\u0114\3\2\2\2\u0117"+
		"N\3\2\2\2\u0118\u0119\7g\2\2\u0119\u011a\7n\2\2\u011a\u011b\7u\2\2\u011b"+
		"\u011f\7g\2\2\u011c\u011d\7\u5428\2\2\u011d\u011f\7\u5249\2\2\u011e\u0118"+
		"\3\2\2\2\u011e\u011c\3\2\2\2\u011fP\3\2\2\2\u0120\u0121\7t\2\2\u0121\u0122"+
		"\7g\2\2\u0122\u0123\7v\2\2\u0123\u0124\7w\2\2\u0124\u0125\7t\2\2\u0125"+
		"\u0129\7p\2\2\u0126\u0127\7\u8fd6\2\2\u0127\u0129\7\u56e0\2\2\u0128\u0120"+
		"\3\2\2\2\u0128\u0126\3\2\2\2\u0129R\3\2\2\2\u012a\u012b\7h\2\2\u012b\u012c"+
		"\7q\2\2\u012c\u0130\7t\2\2\u012d\u012e\7\u8fef\2\2\u012e\u0130\7\u4ee5"+
		"\2\2\u012f\u012a\3\2\2\2\u012f\u012d\3\2\2\2\u0130T\3\2\2\2\u0131\u0132"+
		"\7h\2\2\u0132\u0133\7t\2\2\u0133\u0134\7q\2\2\u0134\u0137\7o\2\2\u0135"+
		"\u0137\7\u5fa0\2\2\u0136\u0131\3\2\2\2\u0136\u0135\3\2\2\2\u0137V\3\2"+
		"\2\2\u0138\u0139\7v\2\2\u0139\u013c\7q\2\2\u013a\u013c\7\u81f5\2\2\u013b"+
		"\u0138\3\2\2\2\u013b\u013a\3\2\2\2\u013cX\3\2\2\2\u013d\u013e\7w\2\2\u013e"+
		"\u013f\7p\2\2\u013f\u0140\7v\2\2\u0140\u0141\7k\2\2\u0141\u0145\7n\2\2"+
		"\u0142\u0143\7\u76f6\2\2\u0143\u0145\7\u5232\2\2\u0144\u013d\3\2\2\2\u0144"+
		"\u0142\3\2\2\2\u0145Z\3\2\2\2\u0146\u0147\7r\2\2\u0147\u0148\7t\2\2\u0148"+
		"\u0149\7k\2\2\u0149\u014a\7p\2\2\u014a\u014e\7v\2\2\u014b\u014c\7\u5372"+
		"\2\2\u014c\u014e\7\u51fc\2\2\u014d\u0146\3\2\2\2\u014d\u014b\3\2\2\2\u014e"+
		"\\\3\2\2\2\u014f\u0150\7r\2\2\u0150\u0151\7t\2\2\u0151\u0152\7k\2\2\u0152"+
		"\u0153\7p\2\2\u0153\u0154\7v\2\2\u0154\u0155\7n\2\2\u0155\u015a\7p\2\2"+
		"\u0156\u0157\7\u5372\2\2\u0157\u0158\7\u51fc\2\2\u0158\u015a\7\u884e\2"+
		"\2\u0159\u014f\3\2\2\2\u0159\u0156\3\2\2\2\u015a^\3\2\2\2\u015b\u015c"+
		"\t\3\2\2\u015c`\3\2\2\2\u015d\u015e\t\4\2\2\u015eb\3\2\2\2\u015f\u0160"+
		"\t\5\2\2\u0160d\3\2\2\2\u0161\u0162\t\6\2\2\u0162f\3\2\2\2\u0163\u0164"+
		"\t\7\2\2\u0164h\3\2\2\2\u0165\u0169\7@\2\2\u0166\u0167\7\u5929\2\2\u0167"+
		"\u0169\7\u65be\2\2\u0168\u0165\3\2\2\2\u0168\u0166\3\2\2\2\u0169j\3\2"+
		"\2\2\u016a\u016e\7>\2\2\u016b\u016c\7\u5c11\2\2\u016c\u016e\7\u65be\2"+
		"\2\u016d\u016a\3\2\2\2\u016d\u016b\3\2\2\2\u016el\3\2\2\2\u016f\u0170"+
		"\7@\2\2\u0170\u0175\7?\2\2\u0171\u0172\7\u5929\2\2\u0172\u0173\7\u7b4b"+
		"\2\2\u0173\u0175\7\u65be\2\2\u0174\u016f\3\2\2\2\u0174\u0171\3\2\2\2\u0175"+
		"n\3\2\2\2\u0176\u0177\7>\2\2\u0177\u017c\7?\2\2\u0178\u0179\7\u5c11\2"+
		"\2\u0179\u017a\7\u7b4b\2\2\u017a\u017c\7\u65be\2\2\u017b\u0176\3\2\2\2"+
		"\u017b\u0178\3\2\2\2\u017cp\3\2\2\2\u017d\u017e\7?\2\2\u017e\u0181\7?"+
		"\2\2\u017f\u0181\7\u6631\2\2\u0180\u017d\3\2\2\2\u0180\u017f\3\2\2\2\u0181"+
		"r\3\2\2\2\u0182\u0183\7#\2\2\u0183\u0187\7?\2\2\u0184\u0185\7\u4e0f\2"+
		"\2\u0185\u0187\7\u6631\2\2\u0186\u0182\3\2\2\2\u0186\u0184\3\2\2\2\u0187"+
		"t\3\2\2\2\u0188\u018a\t\b\2\2\u0189\u0188\3\2\2\2\u018a\u018b\3\2\2\2"+
		"\u018b\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018cv\3\2\2\2\u018d\u0191\7"+
		"$\2\2\u018e\u0190\n\t\2\2\u018f\u018e\3\2\2\2\u0190\u0193\3\2\2\2\u0191"+
		"\u018f\3\2\2\2\u0191\u0192\3\2\2\2\u0192\u0194\3\2\2\2\u0193\u0191\3\2"+
		"\2\2\u0194\u0195\7$\2\2\u0195x\3\2\2\2\u0196\u0197\7v\2\2\u0197\u0198"+
		"\7t\2\2\u0198\u0199\7w\2\2\u0199\u01a2\7g\2\2\u019a\u01a2\7\u7721\2\2"+
		"\u019b\u019c\7h\2\2\u019c\u019d\7c\2\2\u019d\u019e\7n\2\2\u019e\u019f"+
		"\7u\2\2\u019f\u01a2\7g\2\2\u01a0\u01a2\7\u5049\2\2\u01a1\u0196\3\2\2\2"+
		"\u01a1\u019a\3\2\2\2\u01a1\u019b\3\2\2\2\u01a1\u01a0\3\2\2\2\u01a2z\3"+
		"\2\2\2\u01a3\u01a7\5A!\2\u01a4\u01a7\5C\"\2\u01a5\u01a7\5E#\2\u01a6\u01a3"+
		"\3\2\2\2\u01a6\u01a4\3\2\2\2\u01a6\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8"+
		"\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9|\3\2\2\2\u01aa\u01ad\5{>\2\u01ab"+
		"\u01ac\7\60\2\2\u01ac\u01ae\5{>\2\u01ad\u01ab\3\2\2\2\u01ae\u01af\3\2"+
		"\2\2\u01af\u01ad\3\2\2\2\u01af\u01b0\3\2\2\2\u01b0~\3\2\2\2\u01b1\u01b3"+
		"\t\n\2\2\u01b2\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b4"+
		"\u01b5\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6\u01b7\b@\2\2\u01b7\u0080\3\2"+
		"\2\2\35\2\u00f4\u0101\u0109\u0110\u0116\u011e\u0128\u012f\u0136\u013b"+
		"\u0144\u014d\u0159\u0168\u016d\u0174\u017b\u0180\u0186\u018b\u0191\u01a1"+
		"\u01a6\u01a8\u01af\u01b4\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}