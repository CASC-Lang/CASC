// Generated from CASC.g4 by ANTLR 4.7.2

package io.github.chaosunity.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CASCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, CLASS=31, 
		FUNC=32, VARIABLE=33, IF=34, ELSE=35, RETURN=36, PRINT=37, PRINTLN=38, 
		PLUS=39, MINUS=40, STAR=41, SLASH=42, EQUALS=43, GREATER=44, LESS=45, 
		GREATER_EQ=46, LESS_EQ=47, EQ=48, NOT_EQ=49, NUMBER=50, STRING=51, ID=52, 
		TRUE=53, FALSE=54, QUALIFIED_NAME=55, WS=56;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "CHAR", "DIGIT", "UNICODE", 
			"CLASS", "FUNC", "VARIABLE", "IF", "ELSE", "RETURN", "PRINT", "PRINTLN", 
			"PLUS", "MINUS", "STAR", "SLASH", "EQUALS", "GREATER", "LESS", "GREATER_EQ", 
			"LESS_EQ", "EQ", "NOT_EQ", "NUMBER", "STRING", "ID", "TRUE", "FALSE", 
			"QUALIFIED_NAME", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "'}'", "'('", "','", "')'", "':'", "'='", "'boolean'", "'\u5E03\u6797'", 
			"'['", "']'", "'string'", "'\u5B57\u4E32'", "'char'", "'\u5B57\u5143'", 
			"'byte'", "'\u4F4D\u5143'", "'short'", "'\u77ED\u6574\u6578'", "'int'", 
			"'\u6574\u6578'", "'long'", "'\u9577\u6574\u6578'", "'float'", "'\u6D6E\u9EDE\u6578'", 
			"'double'", "'\u500D\u6D6E\u9EDE\u6578'", "'void'", "'\u7A7A'", "'\u8CE6'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, "CLASS", "FUNC", "VARIABLE", 
			"IF", "ELSE", "RETURN", "PRINT", "PRINTLN", "PLUS", "MINUS", "STAR", 
			"SLASH", "EQUALS", "GREATER", "LESS", "GREATER_EQ", "LESS_EQ", "EQ", 
			"NOT_EQ", "NUMBER", "STRING", "ID", "TRUE", "FALSE", "QUALIFIED_NAME", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CASCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CASC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2:\u0194\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2\3"+
		"\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r"+
		"\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30"+
		"\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35"+
		"\3\35\3\35\3\36\3\36\3\37\3\37\3 \5 \u00eb\n \3!\3!\3\"\3\"\3#\3#\3#\3"+
		"#\3#\3#\3#\5#\u00f8\n#\3$\3$\3$\3$\3$\3$\5$\u0100\n$\3%\3%\3%\3%\3%\5"+
		"%\u0107\n%\3&\3&\3&\3&\5&\u010d\n&\3\'\3\'\3\'\3\'\3\'\3\'\5\'\u0115\n"+
		"\'\3(\3(\3(\3(\3(\3(\3(\3(\5(\u011f\n(\3)\3)\3)\3)\3)\3)\3)\5)\u0128\n"+
		")\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\5*\u0134\n*\3+\3+\3,\3,\3-\3-\3.\3.\3"+
		"/\3/\3\60\3\60\3\60\5\60\u0143\n\60\3\61\3\61\3\61\5\61\u0148\n\61\3\62"+
		"\3\62\3\62\3\62\3\62\5\62\u014f\n\62\3\63\3\63\3\63\3\63\3\63\5\63\u0156"+
		"\n\63\3\64\3\64\3\64\5\64\u015b\n\64\3\65\3\65\3\65\3\65\5\65\u0161\n"+
		"\65\3\66\6\66\u0164\n\66\r\66\16\66\u0165\3\67\3\67\7\67\u016a\n\67\f"+
		"\67\16\67\u016d\13\67\3\67\3\67\38\38\38\68\u0174\n8\r8\168\u0175\39\3"+
		"9\39\39\39\59\u017d\n9\3:\3:\3:\3:\3:\3:\5:\u0185\n:\3;\3;\3;\6;\u018a"+
		"\n;\r;\16;\u018b\3<\6<\u018f\n<\r<\16<\u0190\3<\3<\2\2=\3\3\5\4\7\5\t"+
		"\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?\2A\2C\2E"+
		"!G\"I#K$M%O&Q\'S(U)W*Y+[,]-_.a/c\60e\61g\62i\63k\64m\65o\66q\67s8u9w:"+
		"\3\2\13\4\2C\\c|\4\2--\u52a2\u52a2\4\2//\u6e1d\u6e1d\4\2,,\u4e5a\u4e5a"+
		"\4\2\61\61\u9666\u9666\4\2??\u8ce8\u8ce8\3\2\62;\5\2\f\f\17\17$$\5\2\13"+
		"\f\17\17\"\"\2\u01a7\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2"+
		"\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3"+
		"\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2"+
		"\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2"+
		"\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2"+
		"\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2"+
		"\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5{\3\2\2\2\7}"+
		"\3\2\2\2\t\177\3\2\2\2\13\u0081\3\2\2\2\r\u0083\3\2\2\2\17\u0085\3\2\2"+
		"\2\21\u0087\3\2\2\2\23\u008f\3\2\2\2\25\u0092\3\2\2\2\27\u0094\3\2\2\2"+
		"\31\u0096\3\2\2\2\33\u009d\3\2\2\2\35\u00a0\3\2\2\2\37\u00a5\3\2\2\2!"+
		"\u00a8\3\2\2\2#\u00ad\3\2\2\2%\u00b0\3\2\2\2\'\u00b6\3\2\2\2)\u00ba\3"+
		"\2\2\2+\u00be\3\2\2\2-\u00c1\3\2\2\2/\u00c6\3\2\2\2\61\u00ca\3\2\2\2\63"+
		"\u00d0\3\2\2\2\65\u00d4\3\2\2\2\67\u00db\3\2\2\29\u00e0\3\2\2\2;\u00e5"+
		"\3\2\2\2=\u00e7\3\2\2\2?\u00ea\3\2\2\2A\u00ec\3\2\2\2C\u00ee\3\2\2\2E"+
		"\u00f7\3\2\2\2G\u00ff\3\2\2\2I\u0106\3\2\2\2K\u010c\3\2\2\2M\u0114\3\2"+
		"\2\2O\u011e\3\2\2\2Q\u0127\3\2\2\2S\u0133\3\2\2\2U\u0135\3\2\2\2W\u0137"+
		"\3\2\2\2Y\u0139\3\2\2\2[\u013b\3\2\2\2]\u013d\3\2\2\2_\u0142\3\2\2\2a"+
		"\u0147\3\2\2\2c\u014e\3\2\2\2e\u0155\3\2\2\2g\u015a\3\2\2\2i\u0160\3\2"+
		"\2\2k\u0163\3\2\2\2m\u0167\3\2\2\2o\u0173\3\2\2\2q\u017c\3\2\2\2s\u0184"+
		"\3\2\2\2u\u0186\3\2\2\2w\u018e\3\2\2\2yz\7}\2\2z\4\3\2\2\2{|\7\177\2\2"+
		"|\6\3\2\2\2}~\7*\2\2~\b\3\2\2\2\177\u0080\7.\2\2\u0080\n\3\2\2\2\u0081"+
		"\u0082\7+\2\2\u0082\f\3\2\2\2\u0083\u0084\7<\2\2\u0084\16\3\2\2\2\u0085"+
		"\u0086\7?\2\2\u0086\20\3\2\2\2\u0087\u0088\7d\2\2\u0088\u0089\7q\2\2\u0089"+
		"\u008a\7q\2\2\u008a\u008b\7n\2\2\u008b\u008c\7g\2\2\u008c\u008d\7c\2\2"+
		"\u008d\u008e\7p\2\2\u008e\22\3\2\2\2\u008f\u0090\7\u5e05\2\2\u0090\u0091"+
		"\7\u6799\2\2\u0091\24\3\2\2\2\u0092\u0093\7]\2\2\u0093\26\3\2\2\2\u0094"+
		"\u0095\7_\2\2\u0095\30\3\2\2\2\u0096\u0097\7u\2\2\u0097\u0098\7v\2\2\u0098"+
		"\u0099\7t\2\2\u0099\u009a\7k\2\2\u009a\u009b\7p\2\2\u009b\u009c\7i\2\2"+
		"\u009c\32\3\2\2\2\u009d\u009e\7\u5b59\2\2\u009e\u009f\7\u4e34\2\2\u009f"+
		"\34\3\2\2\2\u00a0\u00a1\7e\2\2\u00a1\u00a2\7j\2\2\u00a2\u00a3\7c\2\2\u00a3"+
		"\u00a4\7t\2\2\u00a4\36\3\2\2\2\u00a5\u00a6\7\u5b59\2\2\u00a6\u00a7\7\u5145"+
		"\2\2\u00a7 \3\2\2\2\u00a8\u00a9\7d\2\2\u00a9\u00aa\7{\2\2\u00aa\u00ab"+
		"\7v\2\2\u00ab\u00ac\7g\2\2\u00ac\"\3\2\2\2\u00ad\u00ae\7\u4f4f\2\2\u00ae"+
		"\u00af\7\u5145\2\2\u00af$\3\2\2\2\u00b0\u00b1\7u\2\2\u00b1\u00b2\7j\2"+
		"\2\u00b2\u00b3\7q\2\2\u00b3\u00b4\7t\2\2\u00b4\u00b5\7v\2\2\u00b5&\3\2"+
		"\2\2\u00b6\u00b7\7\u77ef\2\2\u00b7\u00b8\7\u6576\2\2\u00b8\u00b9\7\u657a"+
		"\2\2\u00b9(\3\2\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd"+
		"\7v\2\2\u00bd*\3\2\2\2\u00be\u00bf\7\u6576\2\2\u00bf\u00c0\7\u657a\2\2"+
		"\u00c0,\3\2\2\2\u00c1\u00c2\7n\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4\7p\2"+
		"\2\u00c4\u00c5\7i\2\2\u00c5.\3\2\2\2\u00c6\u00c7\7\u9579\2\2\u00c7\u00c8"+
		"\7\u6576\2\2\u00c8\u00c9\7\u657a\2\2\u00c9\60\3\2\2\2\u00ca\u00cb\7h\2"+
		"\2\u00cb\u00cc\7n\2\2\u00cc\u00cd\7q\2\2\u00cd\u00ce\7c\2\2\u00ce\u00cf"+
		"\7v\2\2\u00cf\62\3\2\2\2\u00d0\u00d1\7\u6d70\2\2\u00d1\u00d2\7\u9ee0\2"+
		"\2\u00d2\u00d3\7\u657a\2\2\u00d3\64\3\2\2\2\u00d4\u00d5\7f\2\2\u00d5\u00d6"+
		"\7q\2\2\u00d6\u00d7\7w\2\2\u00d7\u00d8\7d\2\2\u00d8\u00d9\7n\2\2\u00d9"+
		"\u00da\7g\2\2\u00da\66\3\2\2\2\u00db\u00dc\7\u500f\2\2\u00dc\u00dd\7\u6d70"+
		"\2\2\u00dd\u00de\7\u9ee0\2\2\u00de\u00df\7\u657a\2\2\u00df8\3\2\2\2\u00e0"+
		"\u00e1\7x\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3\7k\2\2\u00e3\u00e4\7f\2\2"+
		"\u00e4:\3\2\2\2\u00e5\u00e6\7\u7a7c\2\2\u00e6<\3\2\2\2\u00e7\u00e8\7\u8ce8"+
		"\2\2\u00e8>\3\2\2\2\u00e9\u00eb\t\2\2\2\u00ea\u00e9\3\2\2\2\u00eb@\3\2"+
		"\2\2\u00ec\u00ed\4\62;\2\u00edB\3\2\2\2\u00ee\u00ef\4\u0082\1\2\u00ef"+
		"D\3\2\2\2\u00f0\u00f1\7e\2\2\u00f1\u00f2\7n\2\2\u00f2\u00f3\7c\2\2\u00f3"+
		"\u00f4\7u\2\2\u00f4\u00f8\7u\2\2\u00f5\u00f6\7\u9860\2\2\u00f6\u00f8\7"+
		"\u5227\2\2\u00f7\u00f0\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f8F\3\2\2\2\u00f9"+
		"\u00fa\7h\2\2\u00fa\u00fb\7w\2\2\u00fb\u00fc\7p\2\2\u00fc\u0100\7e\2\2"+
		"\u00fd\u00fe\7\u51ff\2\2\u00fe\u0100\7\u5f11\2\2\u00ff\u00f9\3\2\2\2\u00ff"+
		"\u00fd\3\2\2\2\u0100H\3\2\2\2\u0101\u0102\7x\2\2\u0102\u0103\7c\2\2\u0103"+
		"\u0107\7t\2\2\u0104\u0105\7\u8b8c\2\2\u0105\u0107\7\u657a\2\2\u0106\u0101"+
		"\3\2\2\2\u0106\u0104\3\2\2\2\u0107J\3\2\2\2\u0108\u0109\7k\2\2\u0109\u010d"+
		"\7h\2\2\u010a\u010b\7\u5984\2\2\u010b\u010d\7\u679e\2\2\u010c\u0108\3"+
		"\2\2\2\u010c\u010a\3\2\2\2\u010dL\3\2\2\2\u010e\u010f\7g\2\2\u010f\u0110"+
		"\7n\2\2\u0110\u0111\7u\2\2\u0111\u0115\7g\2\2\u0112\u0113\7\u5428\2\2"+
		"\u0113\u0115\7\u5249\2\2\u0114\u010e\3\2\2\2\u0114\u0112\3\2\2\2\u0115"+
		"N\3\2\2\2\u0116\u0117\7t\2\2\u0117\u0118\7g\2\2\u0118\u0119\7v\2\2\u0119"+
		"\u011a\7w\2\2\u011a\u011b\7t\2\2\u011b\u011f\7p\2\2\u011c\u011d\7\u8fd6"+
		"\2\2\u011d\u011f\7\u56e0\2\2\u011e\u0116\3\2\2\2\u011e\u011c\3\2\2\2\u011f"+
		"P\3\2\2\2\u0120\u0121\7r\2\2\u0121\u0122\7t\2\2\u0122\u0123\7k\2\2\u0123"+
		"\u0124\7p\2\2\u0124\u0128\7v\2\2\u0125\u0126\7\u5372\2\2\u0126\u0128\7"+
		"\u51fc\2\2\u0127\u0120\3\2\2\2\u0127\u0125\3\2\2\2\u0128R\3\2\2\2\u0129"+
		"\u012a\7r\2\2\u012a\u012b\7t\2\2\u012b\u012c\7k\2\2\u012c\u012d\7p\2\2"+
		"\u012d\u012e\7v\2\2\u012e\u012f\7n\2\2\u012f\u0134\7p\2\2\u0130\u0131"+
		"\7\u5372\2\2\u0131\u0132\7\u51fc\2\2\u0132\u0134\7\u884e\2\2\u0133\u0129"+
		"\3\2\2\2\u0133\u0130\3\2\2\2\u0134T\3\2\2\2\u0135\u0136\t\3\2\2\u0136"+
		"V\3\2\2\2\u0137\u0138\t\4\2\2\u0138X\3\2\2\2\u0139\u013a\t\5\2\2\u013a"+
		"Z\3\2\2\2\u013b\u013c\t\6\2\2\u013c\\\3\2\2\2\u013d\u013e\t\7\2\2\u013e"+
		"^\3\2\2\2\u013f\u0143\7@\2\2\u0140\u0141\7\u5929\2\2\u0141\u0143\7\u65be"+
		"\2\2\u0142\u013f\3\2\2\2\u0142\u0140\3\2\2\2\u0143`\3\2\2\2\u0144\u0148"+
		"\7>\2\2\u0145\u0146\7\u5c11\2\2\u0146\u0148\7\u65be\2\2\u0147\u0144\3"+
		"\2\2\2\u0147\u0145\3\2\2\2\u0148b\3\2\2\2\u0149\u014a\7@\2\2\u014a\u014f"+
		"\7?\2\2\u014b\u014c\7\u5929\2\2\u014c\u014d\7\u7b4b\2\2\u014d\u014f\7"+
		"\u65be\2\2\u014e\u0149\3\2\2\2\u014e\u014b\3\2\2\2\u014fd\3\2\2\2\u0150"+
		"\u0151\7>\2\2\u0151\u0156\7?\2\2\u0152\u0153\7\u5c11\2\2\u0153\u0154\7"+
		"\u7b4b\2\2\u0154\u0156\7\u65be\2\2\u0155\u0150\3\2\2\2\u0155\u0152\3\2"+
		"\2\2\u0156f\3\2\2\2\u0157\u0158\7?\2\2\u0158\u015b\7?\2\2\u0159\u015b"+
		"\7\u6631\2\2\u015a\u0157\3\2\2\2\u015a\u0159\3\2\2\2\u015bh\3\2\2\2\u015c"+
		"\u015d\7#\2\2\u015d\u0161\7?\2\2\u015e\u015f\7\u4e0f\2\2\u015f\u0161\7"+
		"\u6631\2\2\u0160\u015c\3\2\2\2\u0160\u015e\3\2\2\2\u0161j\3\2\2\2\u0162"+
		"\u0164\t\b\2\2\u0163\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0163\3\2"+
		"\2\2\u0165\u0166\3\2\2\2\u0166l\3\2\2\2\u0167\u016b\7$\2\2\u0168\u016a"+
		"\n\t\2\2\u0169\u0168\3\2\2\2\u016a\u016d\3\2\2\2\u016b\u0169\3\2\2\2\u016b"+
		"\u016c\3\2\2\2\u016c\u016e\3\2\2\2\u016d\u016b\3\2\2\2\u016e\u016f\7$"+
		"\2\2\u016fn\3\2\2\2\u0170\u0174\5? \2\u0171\u0174\5A!\2\u0172\u0174\5"+
		"C\"\2\u0173\u0170\3\2\2\2\u0173\u0171\3\2\2\2\u0173\u0172\3\2\2\2\u0174"+
		"\u0175\3\2\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2\2\2\u0176p\3\2\2\2"+
		"\u0177\u0178\7v\2\2\u0178\u0179\7t\2\2\u0179\u017a\7w\2\2\u017a\u017d"+
		"\7g\2\2\u017b\u017d\7\u7721\2\2\u017c\u0177\3\2\2\2\u017c\u017b\3\2\2"+
		"\2\u017dr\3\2\2\2\u017e\u017f\7h\2\2\u017f\u0180\7c\2\2\u0180\u0181\7"+
		"n\2\2\u0181\u0182\7u\2\2\u0182\u0185\7g\2\2\u0183\u0185\7\u5049\2\2\u0184"+
		"\u017e\3\2\2\2\u0184\u0183\3\2\2\2\u0185t\3\2\2\2\u0186\u0189\5o8\2\u0187"+
		"\u0188\7\60\2\2\u0188\u018a\5o8\2\u0189\u0187\3\2\2\2\u018a\u018b\3\2"+
		"\2\2\u018b\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018cv\3\2\2\2\u018d\u018f"+
		"\t\n\2\2\u018e\u018d\3\2\2\2\u018f\u0190\3\2\2\2\u0190\u018e\3\2\2\2\u0190"+
		"\u0191\3\2\2\2\u0191\u0192\3\2\2\2\u0192\u0193\b<\2\2\u0193x\3\2\2\2\32"+
		"\2\u00ea\u00f7\u00ff\u0106\u010c\u0114\u011e\u0127\u0133\u0142\u0147\u014e"+
		"\u0155\u015a\u0160\u0165\u016b\u0173\u0175\u017c\u0184\u018b\u0190\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}