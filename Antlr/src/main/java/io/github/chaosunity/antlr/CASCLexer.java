// Generated from CASC.g4 by ANTLR 4.7.2

package io.github.chaosunity.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CASCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		CLASS=32, FUNC=33, VARIABLE=34, IF=35, ELSE=36, RETURN=37, PRINT=38, PRINTLN=39, 
		NEG=40, POS=41, PLUS=42, MINUS=43, STAR=44, SLASH=45, EQUALS=46, GREATER=47, 
		LESS=48, GREATER_EQ=49, LESS_EQ=50, EQ=51, NOT_EQ=52, NUMBER=53, STRING=54, 
		ID=55, TRUE=56, FALSE=57, QUALIFIED_NAME=58, WS=59;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "CHAR", "DIGIT", 
			"UNICODE", "CLASS", "FUNC", "VARIABLE", "IF", "ELSE", "RETURN", "PRINT", 
			"PRINTLN", "NEG", "POS", "PLUS", "MINUS", "STAR", "SLASH", "EQUALS", 
			"GREATER", "LESS", "GREATER_EQ", "LESS_EQ", "EQ", "NOT_EQ", "NUMBER", 
			"STRING", "ID", "TRUE", "FALSE", "QUALIFIED_NAME", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "'}'", "'('", "','", "')'", "':'", "'='", "'boolean'", "'\u5E03\u6797'", 
			"'['", "']'", "'string'", "'\u5B57\u4E32'", "'char'", "'\u5B57\u5143'", 
			"'byte'", "'\u4F4D\u5143'", "'short'", "'\u77ED\u6574\u6578'", "'int'", 
			"'\u6574\u6578'", "'long'", "'\u9577\u6574\u6578'", "'float'", "'\u6D6E\u9EDE\u6578'", 
			"'double'", "'\u500D\u6D6E\u9EDE\u6578'", "'void'", "'\u7A7A'", "'\u8CE6'", 
			"'?'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, "CLASS", "FUNC", "VARIABLE", 
			"IF", "ELSE", "RETURN", "PRINT", "PRINTLN", "NEG", "POS", "PLUS", "MINUS", 
			"STAR", "SLASH", "EQUALS", "GREATER", "LESS", "GREATER_EQ", "LESS_EQ", 
			"EQ", "NOT_EQ", "NUMBER", "STRING", "ID", "TRUE", "FALSE", "QUALIFIED_NAME", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CASCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CASC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2=\u01a0\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3"+
		"\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3"+
		"\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3"+
		"\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3"+
		"\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3"+
		"\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\5!\u00f3\n!"+
		"\3\"\3\"\3#\3#\3$\3$\3$\3$\3$\3$\3$\5$\u0100\n$\3%\3%\3%\3%\3%\3%\5%\u0108"+
		"\n%\3&\3&\3&\3&\3&\5&\u010f\n&\3\'\3\'\3\'\3\'\5\'\u0115\n\'\3(\3(\3("+
		"\3(\3(\3(\5(\u011d\n(\3)\3)\3)\3)\3)\3)\3)\3)\5)\u0127\n)\3*\3*\3*\3*"+
		"\3*\3*\3*\5*\u0130\n*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\5+\u013c\n+\3,\3,"+
		"\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\63\5\63\u014f"+
		"\n\63\3\64\3\64\3\64\5\64\u0154\n\64\3\65\3\65\3\65\3\65\3\65\5\65\u015b"+
		"\n\65\3\66\3\66\3\66\3\66\3\66\5\66\u0162\n\66\3\67\3\67\3\67\5\67\u0167"+
		"\n\67\38\38\38\38\58\u016d\n8\39\69\u0170\n9\r9\169\u0171\3:\3:\7:\u0176"+
		"\n:\f:\16:\u0179\13:\3:\3:\3;\3;\3;\6;\u0180\n;\r;\16;\u0181\3<\3<\3<"+
		"\3<\3<\5<\u0189\n<\3=\3=\3=\3=\3=\3=\5=\u0191\n=\3>\3>\3>\6>\u0196\n>"+
		"\r>\16>\u0197\3?\6?\u019b\n?\r?\16?\u019c\3?\3?\2\2@\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\2C\2E\2G\"I#"+
		"K$M%O&Q\'S(U)W*Y+[,]-_.a/c\60e\61g\62i\63k\64m\65o\66q\67s8u9w:y;{<}="+
		"\3\2\r\4\2C\\c|\4\2//\u8ca2\u8ca2\4\2--\u6b65\u6b65\4\2--\u52a2\u52a2"+
		"\4\2//\u6e1d\u6e1d\4\2,,\u4e5a\u4e5a\4\2\61\61\u9666\u9666\4\2??\u8ce8"+
		"\u8ce8\3\2\62;\5\2\f\f\17\17$$\5\2\13\f\17\17\"\"\2\u01b3\2\3\3\2\2\2"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]"+
		"\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2"+
		"\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2"+
		"\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\3\177\3\2\2\2\5\u0081\3\2"+
		"\2\2\7\u0083\3\2\2\2\t\u0085\3\2\2\2\13\u0087\3\2\2\2\r\u0089\3\2\2\2"+
		"\17\u008b\3\2\2\2\21\u008d\3\2\2\2\23\u0095\3\2\2\2\25\u0098\3\2\2\2\27"+
		"\u009a\3\2\2\2\31\u009c\3\2\2\2\33\u00a3\3\2\2\2\35\u00a6\3\2\2\2\37\u00ab"+
		"\3\2\2\2!\u00ae\3\2\2\2#\u00b3\3\2\2\2%\u00b6\3\2\2\2\'\u00bc\3\2\2\2"+
		")\u00c0\3\2\2\2+\u00c4\3\2\2\2-\u00c7\3\2\2\2/\u00cc\3\2\2\2\61\u00d0"+
		"\3\2\2\2\63\u00d6\3\2\2\2\65\u00da\3\2\2\2\67\u00e1\3\2\2\29\u00e6\3\2"+
		"\2\2;\u00eb\3\2\2\2=\u00ed\3\2\2\2?\u00ef\3\2\2\2A\u00f2\3\2\2\2C\u00f4"+
		"\3\2\2\2E\u00f6\3\2\2\2G\u00ff\3\2\2\2I\u0107\3\2\2\2K\u010e\3\2\2\2M"+
		"\u0114\3\2\2\2O\u011c\3\2\2\2Q\u0126\3\2\2\2S\u012f\3\2\2\2U\u013b\3\2"+
		"\2\2W\u013d\3\2\2\2Y\u013f\3\2\2\2[\u0141\3\2\2\2]\u0143\3\2\2\2_\u0145"+
		"\3\2\2\2a\u0147\3\2\2\2c\u0149\3\2\2\2e\u014e\3\2\2\2g\u0153\3\2\2\2i"+
		"\u015a\3\2\2\2k\u0161\3\2\2\2m\u0166\3\2\2\2o\u016c\3\2\2\2q\u016f\3\2"+
		"\2\2s\u0173\3\2\2\2u\u017f\3\2\2\2w\u0188\3\2\2\2y\u0190\3\2\2\2{\u0192"+
		"\3\2\2\2}\u019a\3\2\2\2\177\u0080\7}\2\2\u0080\4\3\2\2\2\u0081\u0082\7"+
		"\177\2\2\u0082\6\3\2\2\2\u0083\u0084\7*\2\2\u0084\b\3\2\2\2\u0085\u0086"+
		"\7.\2\2\u0086\n\3\2\2\2\u0087\u0088\7+\2\2\u0088\f\3\2\2\2\u0089\u008a"+
		"\7<\2\2\u008a\16\3\2\2\2\u008b\u008c\7?\2\2\u008c\20\3\2\2\2\u008d\u008e"+
		"\7d\2\2\u008e\u008f\7q\2\2\u008f\u0090\7q\2\2\u0090\u0091\7n\2\2\u0091"+
		"\u0092\7g\2\2\u0092\u0093\7c\2\2\u0093\u0094\7p\2\2\u0094\22\3\2\2\2\u0095"+
		"\u0096\7\u5e05\2\2\u0096\u0097\7\u6799\2\2\u0097\24\3\2\2\2\u0098\u0099"+
		"\7]\2\2\u0099\26\3\2\2\2\u009a\u009b\7_\2\2\u009b\30\3\2\2\2\u009c\u009d"+
		"\7u\2\2\u009d\u009e\7v\2\2\u009e\u009f\7t\2\2\u009f\u00a0\7k\2\2\u00a0"+
		"\u00a1\7p\2\2\u00a1\u00a2\7i\2\2\u00a2\32\3\2\2\2\u00a3\u00a4\7\u5b59"+
		"\2\2\u00a4\u00a5\7\u4e34\2\2\u00a5\34\3\2\2\2\u00a6\u00a7\7e\2\2\u00a7"+
		"\u00a8\7j\2\2\u00a8\u00a9\7c\2\2\u00a9\u00aa\7t\2\2\u00aa\36\3\2\2\2\u00ab"+
		"\u00ac\7\u5b59\2\2\u00ac\u00ad\7\u5145\2\2\u00ad \3\2\2\2\u00ae\u00af"+
		"\7d\2\2\u00af\u00b0\7{\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7g\2\2\u00b2"+
		"\"\3\2\2\2\u00b3\u00b4\7\u4f4f\2\2\u00b4\u00b5\7\u5145\2\2\u00b5$\3\2"+
		"\2\2\u00b6\u00b7\7u\2\2\u00b7\u00b8\7j\2\2\u00b8\u00b9\7q\2\2\u00b9\u00ba"+
		"\7t\2\2\u00ba\u00bb\7v\2\2\u00bb&\3\2\2\2\u00bc\u00bd\7\u77ef\2\2\u00bd"+
		"\u00be\7\u6576\2\2\u00be\u00bf\7\u657a\2\2\u00bf(\3\2\2\2\u00c0\u00c1"+
		"\7k\2\2\u00c1\u00c2\7p\2\2\u00c2\u00c3\7v\2\2\u00c3*\3\2\2\2\u00c4\u00c5"+
		"\7\u6576\2\2\u00c5\u00c6\7\u657a\2\2\u00c6,\3\2\2\2\u00c7\u00c8\7n\2\2"+
		"\u00c8\u00c9\7q\2\2\u00c9\u00ca\7p\2\2\u00ca\u00cb\7i\2\2\u00cb.\3\2\2"+
		"\2\u00cc\u00cd\7\u9579\2\2\u00cd\u00ce\7\u6576\2\2\u00ce\u00cf\7\u657a"+
		"\2\2\u00cf\60\3\2\2\2\u00d0\u00d1\7h\2\2\u00d1\u00d2\7n\2\2\u00d2\u00d3"+
		"\7q\2\2\u00d3\u00d4\7c\2\2\u00d4\u00d5\7v\2\2\u00d5\62\3\2\2\2\u00d6\u00d7"+
		"\7\u6d70\2\2\u00d7\u00d8\7\u9ee0\2\2\u00d8\u00d9\7\u657a\2\2\u00d9\64"+
		"\3\2\2\2\u00da\u00db\7f\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7w\2\2\u00dd"+
		"\u00de\7d\2\2\u00de\u00df\7n\2\2\u00df\u00e0\7g\2\2\u00e0\66\3\2\2\2\u00e1"+
		"\u00e2\7\u500f\2\2\u00e2\u00e3\7\u6d70\2\2\u00e3\u00e4\7\u9ee0\2\2\u00e4"+
		"\u00e5\7\u657a\2\2\u00e58\3\2\2\2\u00e6\u00e7\7x\2\2\u00e7\u00e8\7q\2"+
		"\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7f\2\2\u00ea:\3\2\2\2\u00eb\u00ec\7"+
		"\u7a7c\2\2\u00ec<\3\2\2\2\u00ed\u00ee\7\u8ce8\2\2\u00ee>\3\2\2\2\u00ef"+
		"\u00f0\7A\2\2\u00f0@\3\2\2\2\u00f1\u00f3\t\2\2\2\u00f2\u00f1\3\2\2\2\u00f3"+
		"B\3\2\2\2\u00f4\u00f5\4\62;\2\u00f5D\3\2\2\2\u00f6\u00f7\4\u0082\1\2\u00f7"+
		"F\3\2\2\2\u00f8\u00f9\7e\2\2\u00f9\u00fa\7n\2\2\u00fa\u00fb\7c\2\2\u00fb"+
		"\u00fc\7u\2\2\u00fc\u0100\7u\2\2\u00fd\u00fe\7\u9860\2\2\u00fe\u0100\7"+
		"\u5227\2\2\u00ff\u00f8\3\2\2\2\u00ff\u00fd\3\2\2\2\u0100H\3\2\2\2\u0101"+
		"\u0102\7h\2\2\u0102\u0103\7w\2\2\u0103\u0104\7p\2\2\u0104\u0108\7e\2\2"+
		"\u0105\u0106\7\u51ff\2\2\u0106\u0108\7\u5f11\2\2\u0107\u0101\3\2\2\2\u0107"+
		"\u0105\3\2\2\2\u0108J\3\2\2\2\u0109\u010a\7x\2\2\u010a\u010b\7c\2\2\u010b"+
		"\u010f\7t\2\2\u010c\u010d\7\u8b8c\2\2\u010d\u010f\7\u657a\2\2\u010e\u0109"+
		"\3\2\2\2\u010e\u010c\3\2\2\2\u010fL\3\2\2\2\u0110\u0111\7k\2\2\u0111\u0115"+
		"\7h\2\2\u0112\u0113\7\u5984\2\2\u0113\u0115\7\u679e\2\2\u0114\u0110\3"+
		"\2\2\2\u0114\u0112\3\2\2\2\u0115N\3\2\2\2\u0116\u0117\7g\2\2\u0117\u0118"+
		"\7n\2\2\u0118\u0119\7u\2\2\u0119\u011d\7g\2\2\u011a\u011b\7\u5428\2\2"+
		"\u011b\u011d\7\u5249\2\2\u011c\u0116\3\2\2\2\u011c\u011a\3\2\2\2\u011d"+
		"P\3\2\2\2\u011e\u011f\7t\2\2\u011f\u0120\7g\2\2\u0120\u0121\7v\2\2\u0121"+
		"\u0122\7w\2\2\u0122\u0123\7t\2\2\u0123\u0127\7p\2\2\u0124\u0125\7\u8fd6"+
		"\2\2\u0125\u0127\7\u56e0\2\2\u0126\u011e\3\2\2\2\u0126\u0124\3\2\2\2\u0127"+
		"R\3\2\2\2\u0128\u0129\7r\2\2\u0129\u012a\7t\2\2\u012a\u012b\7k\2\2\u012b"+
		"\u012c\7p\2\2\u012c\u0130\7v\2\2\u012d\u012e\7\u5372\2\2\u012e\u0130\7"+
		"\u51fc\2\2\u012f\u0128\3\2\2\2\u012f\u012d\3\2\2\2\u0130T\3\2\2\2\u0131"+
		"\u0132\7r\2\2\u0132\u0133\7t\2\2\u0133\u0134\7k\2\2\u0134\u0135\7p\2\2"+
		"\u0135\u0136\7v\2\2\u0136\u0137\7n\2\2\u0137\u013c\7p\2\2\u0138\u0139"+
		"\7\u5372\2\2\u0139\u013a\7\u51fc\2\2\u013a\u013c\7\u884e\2\2\u013b\u0131"+
		"\3\2\2\2\u013b\u0138\3\2\2\2\u013cV\3\2\2\2\u013d\u013e\t\3\2\2\u013e"+
		"X\3\2\2\2\u013f\u0140\t\4\2\2\u0140Z\3\2\2\2\u0141\u0142\t\5\2\2\u0142"+
		"\\\3\2\2\2\u0143\u0144\t\6\2\2\u0144^\3\2\2\2\u0145\u0146\t\7\2\2\u0146"+
		"`\3\2\2\2\u0147\u0148\t\b\2\2\u0148b\3\2\2\2\u0149\u014a\t\t\2\2\u014a"+
		"d\3\2\2\2\u014b\u014f\7@\2\2\u014c\u014d\7\u5929\2\2\u014d\u014f\7\u65be"+
		"\2\2\u014e\u014b\3\2\2\2\u014e\u014c\3\2\2\2\u014ff\3\2\2\2\u0150\u0154"+
		"\7>\2\2\u0151\u0152\7\u5c11\2\2\u0152\u0154\7\u65be\2\2\u0153\u0150\3"+
		"\2\2\2\u0153\u0151\3\2\2\2\u0154h\3\2\2\2\u0155\u0156\7@\2\2\u0156\u015b"+
		"\7?\2\2\u0157\u0158\7\u5929\2\2\u0158\u0159\7\u7b4b\2\2\u0159\u015b\7"+
		"\u65be\2\2\u015a\u0155\3\2\2\2\u015a\u0157\3\2\2\2\u015bj\3\2\2\2\u015c"+
		"\u015d\7>\2\2\u015d\u0162\7?\2\2\u015e\u015f\7\u5c11\2\2\u015f\u0160\7"+
		"\u7b4b\2\2\u0160\u0162\7\u65be\2\2\u0161\u015c\3\2\2\2\u0161\u015e\3\2"+
		"\2\2\u0162l\3\2\2\2\u0163\u0164\7?\2\2\u0164\u0167\7?\2\2\u0165\u0167"+
		"\7\u6631\2\2\u0166\u0163\3\2\2\2\u0166\u0165\3\2\2\2\u0167n\3\2\2\2\u0168"+
		"\u0169\7#\2\2\u0169\u016d\7?\2\2\u016a\u016b\7\u4e0f\2\2\u016b\u016d\7"+
		"\u6631\2\2\u016c\u0168\3\2\2\2\u016c\u016a\3\2\2\2\u016dp\3\2\2\2\u016e"+
		"\u0170\t\n\2\2\u016f\u016e\3\2\2\2\u0170\u0171\3\2\2\2\u0171\u016f\3\2"+
		"\2\2\u0171\u0172\3\2\2\2\u0172r\3\2\2\2\u0173\u0177\7$\2\2\u0174\u0176"+
		"\n\13\2\2\u0175\u0174\3\2\2\2\u0176\u0179\3\2\2\2\u0177\u0175\3\2\2\2"+
		"\u0177\u0178\3\2\2\2\u0178\u017a\3\2\2\2\u0179\u0177\3\2\2\2\u017a\u017b"+
		"\7$\2\2\u017bt\3\2\2\2\u017c\u0180\5A!\2\u017d\u0180\5C\"\2\u017e\u0180"+
		"\5E#\2\u017f\u017c\3\2\2\2\u017f\u017d\3\2\2\2\u017f\u017e\3\2\2\2\u0180"+
		"\u0181\3\2\2\2\u0181\u017f\3\2\2\2\u0181\u0182\3\2\2\2\u0182v\3\2\2\2"+
		"\u0183\u0184\7v\2\2\u0184\u0185\7t\2\2\u0185\u0186\7w\2\2\u0186\u0189"+
		"\7g\2\2\u0187\u0189\7\u7721\2\2\u0188\u0183\3\2\2\2\u0188\u0187\3\2\2"+
		"\2\u0189x\3\2\2\2\u018a\u018b\7h\2\2\u018b\u018c\7c\2\2\u018c\u018d\7"+
		"n\2\2\u018d\u018e\7u\2\2\u018e\u0191\7g\2\2\u018f\u0191\7\u5049\2\2\u0190"+
		"\u018a\3\2\2\2\u0190\u018f\3\2\2\2\u0191z\3\2\2\2\u0192\u0195\5u;\2\u0193"+
		"\u0194\7\60\2\2\u0194\u0196\5u;\2\u0195\u0193\3\2\2\2\u0196\u0197\3\2"+
		"\2\2\u0197\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198|\3\2\2\2\u0199\u019b"+
		"\t\f\2\2\u019a\u0199\3\2\2\2\u019b\u019c\3\2\2\2\u019c\u019a\3\2\2\2\u019c"+
		"\u019d\3\2\2\2\u019d\u019e\3\2\2\2\u019e\u019f\b?\2\2\u019f~\3\2\2\2\32"+
		"\2\u00f2\u00ff\u0107\u010e\u0114\u011c\u0126\u012f\u013b\u014e\u0153\u015a"+
		"\u0161\u0166\u016c\u0171\u0177\u017f\u0181\u0188\u0190\u0197\u019c\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}