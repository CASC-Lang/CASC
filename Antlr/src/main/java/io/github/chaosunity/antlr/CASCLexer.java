// Generated from CASC.g4 by ANTLR 4.7.2

package io.github.chaosunity.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CASCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		CLASS=32, FUNC=33, VARIABLE=34, IF=35, ELSE=36, RETURN=37, FOR=38, FROM=39, 
		TO=40, UNTIL=41, PRINT=42, PRINTLN=43, PLUS=44, MINUS=45, STAR=46, SLASH=47, 
		EQUALS=48, GREATER=49, LESS=50, GREATER_EQ=51, LESS_EQ=52, EQ=53, NOT_EQ=54, 
		NUMBER=55, STRING=56, ID=57, TRUE=58, FALSE=59, QUALIFIED_NAME=60, WS=61;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "CHAR", "DIGIT", 
			"UNICODE", "CLASS", "FUNC", "VARIABLE", "IF", "ELSE", "RETURN", "FOR", 
			"FROM", "TO", "UNTIL", "PRINT", "PRINTLN", "PLUS", "MINUS", "STAR", "SLASH", 
			"EQUALS", "GREATER", "LESS", "GREATER_EQ", "LESS_EQ", "EQ", "NOT_EQ", 
			"NUMBER", "STRING", "ID", "TRUE", "FALSE", "QUALIFIED_NAME", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "'}'", "'('", "','", "')'", "':'", "'='", "'boolean'", "'\u5E03\u6797'", 
			"'['", "']'", "'string'", "'\u5B57\u4E32'", "'char'", "'\u5B57\u5143'", 
			"'byte'", "'\u4F4D\u5143'", "'short'", "'\u77ED\u6574\u6578'", "'int'", 
			"'\u6574\u6578'", "'long'", "'\u9577\u6574\u6578'", "'float'", "'\u6D6E\u9EDE\u6578'", 
			"'double'", "'\u500D\u6D6E\u9EDE\u6578'", "'void'", "'\u7A7A'", "'\u8CE6'", 
			"'?'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, "CLASS", "FUNC", "VARIABLE", 
			"IF", "ELSE", "RETURN", "FOR", "FROM", "TO", "UNTIL", "PRINT", "PRINTLN", 
			"PLUS", "MINUS", "STAR", "SLASH", "EQUALS", "GREATER", "LESS", "GREATER_EQ", 
			"LESS_EQ", "EQ", "NOT_EQ", "NUMBER", "STRING", "ID", "TRUE", "FALSE", 
			"QUALIFIED_NAME", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CASCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CASC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2?\u01bc\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3"+
		"\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3"+
		"\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17"+
		"\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26"+
		"\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34"+
		"\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!"+
		"\5!\u00f7\n!\3\"\3\"\3#\3#\3$\3$\3$\3$\3$\3$\3$\5$\u0104\n$\3%\3%\3%\3"+
		"%\3%\3%\5%\u010c\n%\3&\3&\3&\3&\3&\5&\u0113\n&\3\'\3\'\3\'\3\'\5\'\u0119"+
		"\n\'\3(\3(\3(\3(\3(\3(\5(\u0121\n(\3)\3)\3)\3)\3)\3)\3)\3)\5)\u012b\n"+
		")\3*\3*\3*\3*\3*\5*\u0132\n*\3+\3+\3+\3+\3+\5+\u0139\n+\3,\3,\3,\5,\u013e"+
		"\n,\3-\3-\3-\3-\3-\3-\3-\5-\u0147\n-\3.\3.\3.\3.\3.\3.\3.\5.\u0150\n."+
		"\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\5/\u015c\n/\3\60\3\60\3\61\3\61\3\62\3"+
		"\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65\5\65\u016b\n\65\3\66\3\66\3\66"+
		"\5\66\u0170\n\66\3\67\3\67\3\67\3\67\3\67\5\67\u0177\n\67\38\38\38\38"+
		"\38\58\u017e\n8\39\39\39\59\u0183\n9\3:\3:\3:\3:\5:\u0189\n:\3;\6;\u018c"+
		"\n;\r;\16;\u018d\3<\3<\7<\u0192\n<\f<\16<\u0195\13<\3<\3<\3=\3=\3=\6="+
		"\u019c\n=\r=\16=\u019d\3>\3>\3>\3>\3>\5>\u01a5\n>\3?\3?\3?\3?\3?\3?\5"+
		"?\u01ad\n?\3@\3@\3@\6@\u01b2\n@\r@\16@\u01b3\3A\6A\u01b7\nA\rA\16A\u01b8"+
		"\3A\3A\2\2B\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\2C\2E\2G\"I#K$M%O&Q\'S(U)W*Y+[,]-_.a/c\60e\61g\62i\63"+
		"k\64m\65o\66q\67s8u9w:y;{<}=\177>\u0081?\3\2\13\4\2C\\c|\4\2--\u52a2\u52a2"+
		"\5\2//\u6e1d\u6e1d\u8ca2\u8ca2\4\2,,\u4e5a\u4e5a\4\2\61\61\u9666\u9666"+
		"\4\2??\u8ce8\u8ce8\3\2\62;\5\2\f\f\17\17$$\5\2\13\f\17\17\"\"\2\u01d3"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2"+
		"[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3"+
		"\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2"+
		"\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2"+
		"\2\2\u0081\3\2\2\2\3\u0083\3\2\2\2\5\u0085\3\2\2\2\7\u0087\3\2\2\2\t\u0089"+
		"\3\2\2\2\13\u008b\3\2\2\2\r\u008d\3\2\2\2\17\u008f\3\2\2\2\21\u0091\3"+
		"\2\2\2\23\u0099\3\2\2\2\25\u009c\3\2\2\2\27\u009e\3\2\2\2\31\u00a0\3\2"+
		"\2\2\33\u00a7\3\2\2\2\35\u00aa\3\2\2\2\37\u00af\3\2\2\2!\u00b2\3\2\2\2"+
		"#\u00b7\3\2\2\2%\u00ba\3\2\2\2\'\u00c0\3\2\2\2)\u00c4\3\2\2\2+\u00c8\3"+
		"\2\2\2-\u00cb\3\2\2\2/\u00d0\3\2\2\2\61\u00d4\3\2\2\2\63\u00da\3\2\2\2"+
		"\65\u00de\3\2\2\2\67\u00e5\3\2\2\29\u00ea\3\2\2\2;\u00ef\3\2\2\2=\u00f1"+
		"\3\2\2\2?\u00f3\3\2\2\2A\u00f6\3\2\2\2C\u00f8\3\2\2\2E\u00fa\3\2\2\2G"+
		"\u0103\3\2\2\2I\u010b\3\2\2\2K\u0112\3\2\2\2M\u0118\3\2\2\2O\u0120\3\2"+
		"\2\2Q\u012a\3\2\2\2S\u0131\3\2\2\2U\u0138\3\2\2\2W\u013d\3\2\2\2Y\u0146"+
		"\3\2\2\2[\u014f\3\2\2\2]\u015b\3\2\2\2_\u015d\3\2\2\2a\u015f\3\2\2\2c"+
		"\u0161\3\2\2\2e\u0163\3\2\2\2g\u0165\3\2\2\2i\u016a\3\2\2\2k\u016f\3\2"+
		"\2\2m\u0176\3\2\2\2o\u017d\3\2\2\2q\u0182\3\2\2\2s\u0188\3\2\2\2u\u018b"+
		"\3\2\2\2w\u018f\3\2\2\2y\u019b\3\2\2\2{\u01a4\3\2\2\2}\u01ac\3\2\2\2\177"+
		"\u01ae\3\2\2\2\u0081\u01b6\3\2\2\2\u0083\u0084\7}\2\2\u0084\4\3\2\2\2"+
		"\u0085\u0086\7\177\2\2\u0086\6\3\2\2\2\u0087\u0088\7*\2\2\u0088\b\3\2"+
		"\2\2\u0089\u008a\7.\2\2\u008a\n\3\2\2\2\u008b\u008c\7+\2\2\u008c\f\3\2"+
		"\2\2\u008d\u008e\7<\2\2\u008e\16\3\2\2\2\u008f\u0090\7?\2\2\u0090\20\3"+
		"\2\2\2\u0091\u0092\7d\2\2\u0092\u0093\7q\2\2\u0093\u0094\7q\2\2\u0094"+
		"\u0095\7n\2\2\u0095\u0096\7g\2\2\u0096\u0097\7c\2\2\u0097\u0098\7p\2\2"+
		"\u0098\22\3\2\2\2\u0099\u009a\7\u5e05\2\2\u009a\u009b\7\u6799\2\2\u009b"+
		"\24\3\2\2\2\u009c\u009d\7]\2\2\u009d\26\3\2\2\2\u009e\u009f\7_\2\2\u009f"+
		"\30\3\2\2\2\u00a0\u00a1\7u\2\2\u00a1\u00a2\7v\2\2\u00a2\u00a3\7t\2\2\u00a3"+
		"\u00a4\7k\2\2\u00a4\u00a5\7p\2\2\u00a5\u00a6\7i\2\2\u00a6\32\3\2\2\2\u00a7"+
		"\u00a8\7\u5b59\2\2\u00a8\u00a9\7\u4e34\2\2\u00a9\34\3\2\2\2\u00aa\u00ab"+
		"\7e\2\2\u00ab\u00ac\7j\2\2\u00ac\u00ad\7c\2\2\u00ad\u00ae\7t\2\2\u00ae"+
		"\36\3\2\2\2\u00af\u00b0\7\u5b59\2\2\u00b0\u00b1\7\u5145\2\2\u00b1 \3\2"+
		"\2\2\u00b2\u00b3\7d\2\2\u00b3\u00b4\7{\2\2\u00b4\u00b5\7v\2\2\u00b5\u00b6"+
		"\7g\2\2\u00b6\"\3\2\2\2\u00b7\u00b8\7\u4f4f\2\2\u00b8\u00b9\7\u5145\2"+
		"\2\u00b9$\3\2\2\2\u00ba\u00bb\7u\2\2\u00bb\u00bc\7j\2\2\u00bc\u00bd\7"+
		"q\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7v\2\2\u00bf&\3\2\2\2\u00c0\u00c1"+
		"\7\u77ef\2\2\u00c1\u00c2\7\u6576\2\2\u00c2\u00c3\7\u657a\2\2\u00c3(\3"+
		"\2\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7p\2\2\u00c6\u00c7\7v\2\2\u00c7"+
		"*\3\2\2\2\u00c8\u00c9\7\u6576\2\2\u00c9\u00ca\7\u657a\2\2\u00ca,\3\2\2"+
		"\2\u00cb\u00cc\7n\2\2\u00cc\u00cd\7q\2\2\u00cd\u00ce\7p\2\2\u00ce\u00cf"+
		"\7i\2\2\u00cf.\3\2\2\2\u00d0\u00d1\7\u9579\2\2\u00d1\u00d2\7\u6576\2\2"+
		"\u00d2\u00d3\7\u657a\2\2\u00d3\60\3\2\2\2\u00d4\u00d5\7h\2\2\u00d5\u00d6"+
		"\7n\2\2\u00d6\u00d7\7q\2\2\u00d7\u00d8\7c\2\2\u00d8\u00d9\7v\2\2\u00d9"+
		"\62\3\2\2\2\u00da\u00db\7\u6d70\2\2\u00db\u00dc\7\u9ee0\2\2\u00dc\u00dd"+
		"\7\u657a\2\2\u00dd\64\3\2\2\2\u00de\u00df\7f\2\2\u00df\u00e0\7q\2\2\u00e0"+
		"\u00e1\7w\2\2\u00e1\u00e2\7d\2\2\u00e2\u00e3\7n\2\2\u00e3\u00e4\7g\2\2"+
		"\u00e4\66\3\2\2\2\u00e5\u00e6\7\u500f\2\2\u00e6\u00e7\7\u6d70\2\2\u00e7"+
		"\u00e8\7\u9ee0\2\2\u00e8\u00e9\7\u657a\2\2\u00e98\3\2\2\2\u00ea\u00eb"+
		"\7x\2\2\u00eb\u00ec\7q\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee\7f\2\2\u00ee"+
		":\3\2\2\2\u00ef\u00f0\7\u7a7c\2\2\u00f0<\3\2\2\2\u00f1\u00f2\7\u8ce8\2"+
		"\2\u00f2>\3\2\2\2\u00f3\u00f4\7A\2\2\u00f4@\3\2\2\2\u00f5\u00f7\t\2\2"+
		"\2\u00f6\u00f5\3\2\2\2\u00f7B\3\2\2\2\u00f8\u00f9\4\62;\2\u00f9D\3\2\2"+
		"\2\u00fa\u00fb\4\u0082\1\2\u00fbF\3\2\2\2\u00fc\u00fd\7e\2\2\u00fd\u00fe"+
		"\7n\2\2\u00fe\u00ff\7c\2\2\u00ff\u0100\7u\2\2\u0100\u0104\7u\2\2\u0101"+
		"\u0102\7\u9860\2\2\u0102\u0104\7\u5227\2\2\u0103\u00fc\3\2\2\2\u0103\u0101"+
		"\3\2\2\2\u0104H\3\2\2\2\u0105\u0106\7h\2\2\u0106\u0107\7w\2\2\u0107\u0108"+
		"\7p\2\2\u0108\u010c\7e\2\2\u0109\u010a\7\u51ff\2\2\u010a\u010c\7\u5f11"+
		"\2\2\u010b\u0105\3\2\2\2\u010b\u0109\3\2\2\2\u010cJ\3\2\2\2\u010d\u010e"+
		"\7x\2\2\u010e\u010f\7c\2\2\u010f\u0113\7t\2\2\u0110\u0111\7\u8b8c\2\2"+
		"\u0111\u0113\7\u657a\2\2\u0112\u010d\3\2\2\2\u0112\u0110\3\2\2\2\u0113"+
		"L\3\2\2\2\u0114\u0115\7k\2\2\u0115\u0119\7h\2\2\u0116\u0117\7\u5984\2"+
		"\2\u0117\u0119\7\u679e\2\2\u0118\u0114\3\2\2\2\u0118\u0116\3\2\2\2\u0119"+
		"N\3\2\2\2\u011a\u011b\7g\2\2\u011b\u011c\7n\2\2\u011c\u011d\7u\2\2\u011d"+
		"\u0121\7g\2\2\u011e\u011f\7\u5428\2\2\u011f\u0121\7\u5249\2\2\u0120\u011a"+
		"\3\2\2\2\u0120\u011e\3\2\2\2\u0121P\3\2\2\2\u0122\u0123\7t\2\2\u0123\u0124"+
		"\7g\2\2\u0124\u0125\7v\2\2\u0125\u0126\7w\2\2\u0126\u0127\7t\2\2\u0127"+
		"\u012b\7p\2\2\u0128\u0129\7\u8fd6\2\2\u0129\u012b\7\u56e0\2\2\u012a\u0122"+
		"\3\2\2\2\u012a\u0128\3\2\2\2\u012bR\3\2\2\2\u012c\u012d\7h\2\2\u012d\u012e"+
		"\7q\2\2\u012e\u0132\7t\2\2\u012f\u0130\7\u8fef\2\2\u0130\u0132\7\u4ee5"+
		"\2\2\u0131\u012c\3\2\2\2\u0131\u012f\3\2\2\2\u0132T\3\2\2\2\u0133\u0134"+
		"\7h\2\2\u0134\u0135\7t\2\2\u0135\u0136\7q\2\2\u0136\u0139\7o\2\2\u0137"+
		"\u0139\7\u5fa0\2\2\u0138\u0133\3\2\2\2\u0138\u0137\3\2\2\2\u0139V\3\2"+
		"\2\2\u013a\u013b\7v\2\2\u013b\u013e\7q\2\2\u013c\u013e\7\u81f5\2\2\u013d"+
		"\u013a\3\2\2\2\u013d\u013c\3\2\2\2\u013eX\3\2\2\2\u013f\u0140\7w\2\2\u0140"+
		"\u0141\7p\2\2\u0141\u0142\7v\2\2\u0142\u0143\7k\2\2\u0143\u0147\7n\2\2"+
		"\u0144\u0145\7\u76f6\2\2\u0145\u0147\7\u5232\2\2\u0146\u013f\3\2\2\2\u0146"+
		"\u0144\3\2\2\2\u0147Z\3\2\2\2\u0148\u0149\7r\2\2\u0149\u014a\7t\2\2\u014a"+
		"\u014b\7k\2\2\u014b\u014c\7p\2\2\u014c\u0150\7v\2\2\u014d\u014e\7\u5372"+
		"\2\2\u014e\u0150\7\u51fc\2\2\u014f\u0148\3\2\2\2\u014f\u014d\3\2\2\2\u0150"+
		"\\\3\2\2\2\u0151\u0152\7r\2\2\u0152\u0153\7t\2\2\u0153\u0154\7k\2\2\u0154"+
		"\u0155\7p\2\2\u0155\u0156\7v\2\2\u0156\u0157\7n\2\2\u0157\u015c\7p\2\2"+
		"\u0158\u0159\7\u5372\2\2\u0159\u015a\7\u51fc\2\2\u015a\u015c\7\u884e\2"+
		"\2\u015b\u0151\3\2\2\2\u015b\u0158\3\2\2\2\u015c^\3\2\2\2\u015d\u015e"+
		"\t\3\2\2\u015e`\3\2\2\2\u015f\u0160\t\4\2\2\u0160b\3\2\2\2\u0161\u0162"+
		"\t\5\2\2\u0162d\3\2\2\2\u0163\u0164\t\6\2\2\u0164f\3\2\2\2\u0165\u0166"+
		"\t\7\2\2\u0166h\3\2\2\2\u0167\u016b\7@\2\2\u0168\u0169\7\u5929\2\2\u0169"+
		"\u016b\7\u65be\2\2\u016a\u0167\3\2\2\2\u016a\u0168\3\2\2\2\u016bj\3\2"+
		"\2\2\u016c\u0170\7>\2\2\u016d\u016e\7\u5c11\2\2\u016e\u0170\7\u65be\2"+
		"\2\u016f\u016c\3\2\2\2\u016f\u016d\3\2\2\2\u0170l\3\2\2\2\u0171\u0172"+
		"\7@\2\2\u0172\u0177\7?\2\2\u0173\u0174\7\u5929\2\2\u0174\u0175\7\u7b4b"+
		"\2\2\u0175\u0177\7\u65be\2\2\u0176\u0171\3\2\2\2\u0176\u0173\3\2\2\2\u0177"+
		"n\3\2\2\2\u0178\u0179\7>\2\2\u0179\u017e\7?\2\2\u017a\u017b\7\u5c11\2"+
		"\2\u017b\u017c\7\u7b4b\2\2\u017c\u017e\7\u65be\2\2\u017d\u0178\3\2\2\2"+
		"\u017d\u017a\3\2\2\2\u017ep\3\2\2\2\u017f\u0180\7?\2\2\u0180\u0183\7?"+
		"\2\2\u0181\u0183\7\u6631\2\2\u0182\u017f\3\2\2\2\u0182\u0181\3\2\2\2\u0183"+
		"r\3\2\2\2\u0184\u0185\7#\2\2\u0185\u0189\7?\2\2\u0186\u0187\7\u4e0f\2"+
		"\2\u0187\u0189\7\u6631\2\2\u0188\u0184\3\2\2\2\u0188\u0186\3\2\2\2\u0189"+
		"t\3\2\2\2\u018a\u018c\t\b\2\2\u018b\u018a\3\2\2\2\u018c\u018d\3\2\2\2"+
		"\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018ev\3\2\2\2\u018f\u0193\7"+
		"$\2\2\u0190\u0192\n\t\2\2\u0191\u0190\3\2\2\2\u0192\u0195\3\2\2\2\u0193"+
		"\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194\u0196\3\2\2\2\u0195\u0193\3\2"+
		"\2\2\u0196\u0197\7$\2\2\u0197x\3\2\2\2\u0198\u019c\5A!\2\u0199\u019c\5"+
		"C\"\2\u019a\u019c\5E#\2\u019b\u0198\3\2\2\2\u019b\u0199\3\2\2\2\u019b"+
		"\u019a\3\2\2\2\u019c\u019d\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e\3\2"+
		"\2\2\u019ez\3\2\2\2\u019f\u01a0\7v\2\2\u01a0\u01a1\7t\2\2\u01a1\u01a2"+
		"\7w\2\2\u01a2\u01a5\7g\2\2\u01a3\u01a5\7\u7721\2\2\u01a4\u019f\3\2\2\2"+
		"\u01a4\u01a3\3\2\2\2\u01a5|\3\2\2\2\u01a6\u01a7\7h\2\2\u01a7\u01a8\7c"+
		"\2\2\u01a8\u01a9\7n\2\2\u01a9\u01aa\7u\2\2\u01aa\u01ad\7g\2\2\u01ab\u01ad"+
		"\7\u5049\2\2\u01ac\u01a6\3\2\2\2\u01ac\u01ab\3\2\2\2\u01ad~\3\2\2\2\u01ae"+
		"\u01b1\5y=\2\u01af\u01b0\7\60\2\2\u01b0\u01b2\5y=\2\u01b1\u01af\3\2\2"+
		"\2\u01b2\u01b3\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4\u0080"+
		"\3\2\2\2\u01b5\u01b7\t\n\2\2\u01b6\u01b5\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8"+
		"\u01b6\3\2\2\2\u01b8\u01b9\3\2\2\2\u01b9\u01ba\3\2\2\2\u01ba\u01bb\bA"+
		"\2\2\u01bb\u0082\3\2\2\2\36\2\u00f6\u0103\u010b\u0112\u0118\u0120\u012a"+
		"\u0131\u0138\u013d\u0146\u014f\u015b\u016a\u016f\u0176\u017d\u0182\u0188"+
		"\u018d\u0193\u019b\u019d\u01a4\u01ac\u01b3\u01b8\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}