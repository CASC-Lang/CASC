// Generated from CASC.g4 by ANTLR 4.7.2

package io.github.chaosunity.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CASCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, CLASS=37, FUNC=38, VARIABLE=39, 
		IF=40, ELSE=41, RETURN=42, FOR=43, FROM=44, TO=45, UNTIL=46, PRINT=47, 
		PRINTLN=48, PLUS=49, MINUS=50, STAR=51, SLASH=52, EQUALS=53, GREATER=54, 
		LESS=55, GREATER_EQ=56, LESS_EQ=57, EQ=58, NOT_EQ=59, NUMBER=60, STRING=61, 
		BOOL=62, ID=63, WS=64;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "CHAR", "DIGIT", "UNICODE", "CLASS", "FUNC", 
			"VARIABLE", "IF", "ELSE", "RETURN", "FOR", "FROM", "TO", "UNTIL", "PRINT", 
			"PRINTLN", "PLUS", "MINUS", "STAR", "SLASH", "EQUALS", "GREATER", "LESS", 
			"GREATER_EQ", "LESS_EQ", "EQ", "NOT_EQ", "NUMBER", "STRING", "BOOL", 
			"ID", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "'}'", "'ctor'", "'('", "','", "')'", "'fn'", "':'", "'='", 
			"'boolean'", "'\u5E03\u6797'", "'['", "']'", "'string'", "'\u5B57\u4E32'", 
			"'char'", "'\u5B57\u5143'", "'byte'", "'\u4F4D\u5143'", "'short'", "'\u77ED\u6574\u6578'", 
			"'int'", "'\u6574\u6578'", "'long'", "'\u9577\u6574\u6578'", "'float'", 
			"'\u6D6E\u9EDE\u6578'", "'double'", "'\u500D\u6D6E\u9EDE\u6578'", "'void'", 
			"'\u7A7A'", "'::'", "':='", "'this'", "'.'", "'?'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, "CLASS", "FUNC", "VARIABLE", "IF", "ELSE", "RETURN", "FOR", "FROM", 
			"TO", "UNTIL", "PRINT", "PRINTLN", "PLUS", "MINUS", "STAR", "SLASH", 
			"EQUALS", "GREATER", "LESS", "GREATER_EQ", "LESS_EQ", "EQ", "NOT_EQ", 
			"NUMBER", "STRING", "BOOL", "ID", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CASCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CASC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2B\u01ca\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\3\2\3\2\3\3\3\3\3\4\3\4\3\4"+
		"\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31"+
		"\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3"+
		"#\3#\3#\3$\3$\3%\3%\3&\5&\u0110\n&\3\'\3\'\3(\3(\3)\3)\3)\3)\3)\3)\3)"+
		"\5)\u011d\n)\3*\3*\3*\3*\5*\u0123\n*\3+\3+\3+\3+\3+\5+\u012a\n+\3,\3,"+
		"\3,\3,\5,\u0130\n,\3-\3-\3-\3-\3-\3-\5-\u0138\n-\3.\3.\3.\3.\3.\3.\3."+
		"\3.\5.\u0142\n.\3/\3/\3/\3/\3/\5/\u0149\n/\3\60\3\60\3\60\3\60\3\60\5"+
		"\60\u0150\n\60\3\61\3\61\3\61\5\61\u0155\n\61\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\5\62\u015e\n\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\5\63\u0167"+
		"\n\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\5\64\u0173\n\64"+
		"\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3:\5:\u0182\n:\3;\3;"+
		"\3;\5;\u0187\n;\3<\3<\3<\3<\3<\5<\u018e\n<\3=\3=\3=\3=\3=\5=\u0195\n="+
		"\3>\3>\3>\5>\u019a\n>\3?\3?\3?\3?\5?\u01a0\n?\3@\6@\u01a3\n@\r@\16@\u01a4"+
		"\3A\3A\7A\u01a9\nA\fA\16A\u01ac\13A\3A\3A\3B\3B\3B\3B\3B\3B\3B\3B\3B\3"+
		"B\3B\5B\u01bb\nB\3C\3C\3C\6C\u01c0\nC\rC\16C\u01c1\3D\6D\u01c5\nD\rD\16"+
		"D\u01c6\3D\3D\2\2E\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r"+
		"\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\2M\2O\2Q\'S(U)W*Y+[,]-_.a/c\60e\61"+
		"g\62i\63k\64m\65o\66q\67s8u9w:y;{<}=\177>\u0081?\u0083@\u0085A\u0087B"+
		"\3\2\13\4\2C\\c|\4\2--\u52a2\u52a2\5\2//\u6e1d\u6e1d\u8ca2\u8ca2\4\2,"+
		",\u4e5a\u4e5a\4\2\61\61\u9666\u9666\4\2??\u8ce8\u8ce8\4\2\60\60\62;\5"+
		"\2\f\f\17\17$$\5\2\13\f\17\17\"\"\2\u01e1\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2"+
		"\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2"+
		"\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2"+
		"\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2"+
		"\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2"+
		"\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2"+
		"\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y"+
		"\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3"+
		"\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\3\u0089\3\2\2\2\5\u008b\3\2\2\2"+
		"\7\u008d\3\2\2\2\t\u0092\3\2\2\2\13\u0094\3\2\2\2\r\u0096\3\2\2\2\17\u0098"+
		"\3\2\2\2\21\u009b\3\2\2\2\23\u009d\3\2\2\2\25\u009f\3\2\2\2\27\u00a7\3"+
		"\2\2\2\31\u00aa\3\2\2\2\33\u00ac\3\2\2\2\35\u00ae\3\2\2\2\37\u00b5\3\2"+
		"\2\2!\u00b8\3\2\2\2#\u00bd\3\2\2\2%\u00c0\3\2\2\2\'\u00c5\3\2\2\2)\u00c8"+
		"\3\2\2\2+\u00ce\3\2\2\2-\u00d2\3\2\2\2/\u00d6\3\2\2\2\61\u00d9\3\2\2\2"+
		"\63\u00de\3\2\2\2\65\u00e2\3\2\2\2\67\u00e8\3\2\2\29\u00ec\3\2\2\2;\u00f3"+
		"\3\2\2\2=\u00f8\3\2\2\2?\u00fd\3\2\2\2A\u00ff\3\2\2\2C\u0102\3\2\2\2E"+
		"\u0105\3\2\2\2G\u010a\3\2\2\2I\u010c\3\2\2\2K\u010f\3\2\2\2M\u0111\3\2"+
		"\2\2O\u0113\3\2\2\2Q\u011c\3\2\2\2S\u0122\3\2\2\2U\u0129\3\2\2\2W\u012f"+
		"\3\2\2\2Y\u0137\3\2\2\2[\u0141\3\2\2\2]\u0148\3\2\2\2_\u014f\3\2\2\2a"+
		"\u0154\3\2\2\2c\u015d\3\2\2\2e\u0166\3\2\2\2g\u0172\3\2\2\2i\u0174\3\2"+
		"\2\2k\u0176\3\2\2\2m\u0178\3\2\2\2o\u017a\3\2\2\2q\u017c\3\2\2\2s\u0181"+
		"\3\2\2\2u\u0186\3\2\2\2w\u018d\3\2\2\2y\u0194\3\2\2\2{\u0199\3\2\2\2}"+
		"\u019f\3\2\2\2\177\u01a2\3\2\2\2\u0081\u01a6\3\2\2\2\u0083\u01ba\3\2\2"+
		"\2\u0085\u01bf\3\2\2\2\u0087\u01c4\3\2\2\2\u0089\u008a\7}\2\2\u008a\4"+
		"\3\2\2\2\u008b\u008c\7\177\2\2\u008c\6\3\2\2\2\u008d\u008e\7e\2\2\u008e"+
		"\u008f\7v\2\2\u008f\u0090\7q\2\2\u0090\u0091\7t\2\2\u0091\b\3\2\2\2\u0092"+
		"\u0093\7*\2\2\u0093\n\3\2\2\2\u0094\u0095\7.\2\2\u0095\f\3\2\2\2\u0096"+
		"\u0097\7+\2\2\u0097\16\3\2\2\2\u0098\u0099\7h\2\2\u0099\u009a\7p\2\2\u009a"+
		"\20\3\2\2\2\u009b\u009c\7<\2\2\u009c\22\3\2\2\2\u009d\u009e\7?\2\2\u009e"+
		"\24\3\2\2\2\u009f\u00a0\7d\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2\7q\2\2\u00a2"+
		"\u00a3\7n\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7c\2\2\u00a5\u00a6\7p\2\2"+
		"\u00a6\26\3\2\2\2\u00a7\u00a8\7\u5e05\2\2\u00a8\u00a9\7\u6799\2\2\u00a9"+
		"\30\3\2\2\2\u00aa\u00ab\7]\2\2\u00ab\32\3\2\2\2\u00ac\u00ad\7_\2\2\u00ad"+
		"\34\3\2\2\2\u00ae\u00af\7u\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1\7t\2\2\u00b1"+
		"\u00b2\7k\2\2\u00b2\u00b3\7p\2\2\u00b3\u00b4\7i\2\2\u00b4\36\3\2\2\2\u00b5"+
		"\u00b6\7\u5b59\2\2\u00b6\u00b7\7\u4e34\2\2\u00b7 \3\2\2\2\u00b8\u00b9"+
		"\7e\2\2\u00b9\u00ba\7j\2\2\u00ba\u00bb\7c\2\2\u00bb\u00bc\7t\2\2\u00bc"+
		"\"\3\2\2\2\u00bd\u00be\7\u5b59\2\2\u00be\u00bf\7\u5145\2\2\u00bf$\3\2"+
		"\2\2\u00c0\u00c1\7d\2\2\u00c1\u00c2\7{\2\2\u00c2\u00c3\7v\2\2\u00c3\u00c4"+
		"\7g\2\2\u00c4&\3\2\2\2\u00c5\u00c6\7\u4f4f\2\2\u00c6\u00c7\7\u5145\2\2"+
		"\u00c7(\3\2\2\2\u00c8\u00c9\7u\2\2\u00c9\u00ca\7j\2\2\u00ca\u00cb\7q\2"+
		"\2\u00cb\u00cc\7t\2\2\u00cc\u00cd\7v\2\2\u00cd*\3\2\2\2\u00ce\u00cf\7"+
		"\u77ef\2\2\u00cf\u00d0\7\u6576\2\2\u00d0\u00d1\7\u657a\2\2\u00d1,\3\2"+
		"\2\2\u00d2\u00d3\7k\2\2\u00d3\u00d4\7p\2\2\u00d4\u00d5\7v\2\2\u00d5.\3"+
		"\2\2\2\u00d6\u00d7\7\u6576\2\2\u00d7\u00d8\7\u657a\2\2\u00d8\60\3\2\2"+
		"\2\u00d9\u00da\7n\2\2\u00da\u00db\7q\2\2\u00db\u00dc\7p\2\2\u00dc\u00dd"+
		"\7i\2\2\u00dd\62\3\2\2\2\u00de\u00df\7\u9579\2\2\u00df\u00e0\7\u6576\2"+
		"\2\u00e0\u00e1\7\u657a\2\2\u00e1\64\3\2\2\2\u00e2\u00e3\7h\2\2\u00e3\u00e4"+
		"\7n\2\2\u00e4\u00e5\7q\2\2\u00e5\u00e6\7c\2\2\u00e6\u00e7\7v\2\2\u00e7"+
		"\66\3\2\2\2\u00e8\u00e9\7\u6d70\2\2\u00e9\u00ea\7\u9ee0\2\2\u00ea\u00eb"+
		"\7\u657a\2\2\u00eb8\3\2\2\2\u00ec\u00ed\7f\2\2\u00ed\u00ee\7q\2\2\u00ee"+
		"\u00ef\7w\2\2\u00ef\u00f0\7d\2\2\u00f0\u00f1\7n\2\2\u00f1\u00f2\7g\2\2"+
		"\u00f2:\3\2\2\2\u00f3\u00f4\7\u500f\2\2\u00f4\u00f5\7\u6d70\2\2\u00f5"+
		"\u00f6\7\u9ee0\2\2\u00f6\u00f7\7\u657a\2\2\u00f7<\3\2\2\2\u00f8\u00f9"+
		"\7x\2\2\u00f9\u00fa\7q\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fc\7f\2\2\u00fc"+
		">\3\2\2\2\u00fd\u00fe\7\u7a7c\2\2\u00fe@\3\2\2\2\u00ff\u0100\7<\2\2\u0100"+
		"\u0101\7<\2\2\u0101B\3\2\2\2\u0102\u0103\7<\2\2\u0103\u0104\7?\2\2\u0104"+
		"D\3\2\2\2\u0105\u0106\7v\2\2\u0106\u0107\7j\2\2\u0107\u0108\7k\2\2\u0108"+
		"\u0109\7u\2\2\u0109F\3\2\2\2\u010a\u010b\7\60\2\2\u010bH\3\2\2\2\u010c"+
		"\u010d\7A\2\2\u010dJ\3\2\2\2\u010e\u0110\t\2\2\2\u010f\u010e\3\2\2\2\u0110"+
		"L\3\2\2\2\u0111\u0112\4\62;\2\u0112N\3\2\2\2\u0113\u0114\4\u0082\1\2\u0114"+
		"P\3\2\2\2\u0115\u0116\7e\2\2\u0116\u0117\7n\2\2\u0117\u0118\7c\2\2\u0118"+
		"\u0119\7u\2\2\u0119\u011d\7u\2\2\u011a\u011b\7\u9860\2\2\u011b\u011d\7"+
		"\u5227\2\2\u011c\u0115\3\2\2\2\u011c\u011a\3\2\2\2\u011dR\3\2\2\2\u011e"+
		"\u011f\7h\2\2\u011f\u0123\7p\2\2\u0120\u0121\7\u51ff\2\2\u0121\u0123\7"+
		"\u5f11\2\2\u0122\u011e\3\2\2\2\u0122\u0120\3\2\2\2\u0123T\3\2\2\2\u0124"+
		"\u0125\7x\2\2\u0125\u0126\7c\2\2\u0126\u012a\7t\2\2\u0127\u0128\7\u8b8c"+
		"\2\2\u0128\u012a\7\u657a\2\2\u0129\u0124\3\2\2\2\u0129\u0127\3\2\2\2\u012a"+
		"V\3\2\2\2\u012b\u012c\7k\2\2\u012c\u0130\7h\2\2\u012d\u012e\7\u5984\2"+
		"\2\u012e\u0130\7\u679e\2\2\u012f\u012b\3\2\2\2\u012f\u012d\3\2\2\2\u0130"+
		"X\3\2\2\2\u0131\u0132\7g\2\2\u0132\u0133\7n\2\2\u0133\u0134\7u\2\2\u0134"+
		"\u0138\7g\2\2\u0135\u0136\7\u5428\2\2\u0136\u0138\7\u5249\2\2\u0137\u0131"+
		"\3\2\2\2\u0137\u0135\3\2\2\2\u0138Z\3\2\2\2\u0139\u013a\7t\2\2\u013a\u013b"+
		"\7g\2\2\u013b\u013c\7v\2\2\u013c\u013d\7w\2\2\u013d\u013e\7t\2\2\u013e"+
		"\u0142\7p\2\2\u013f\u0140\7\u8fd6\2\2\u0140\u0142\7\u56e0\2\2\u0141\u0139"+
		"\3\2\2\2\u0141\u013f\3\2\2\2\u0142\\\3\2\2\2\u0143\u0144\7h\2\2\u0144"+
		"\u0145\7q\2\2\u0145\u0149\7t\2\2\u0146\u0147\7\u8fef\2\2\u0147\u0149\7"+
		"\u4ee5\2\2\u0148\u0143\3\2\2\2\u0148\u0146\3\2\2\2\u0149^\3\2\2\2\u014a"+
		"\u014b\7h\2\2\u014b\u014c\7t\2\2\u014c\u014d\7q\2\2\u014d\u0150\7o\2\2"+
		"\u014e\u0150\7\u5fa0\2\2\u014f\u014a\3\2\2\2\u014f\u014e\3\2\2\2\u0150"+
		"`\3\2\2\2\u0151\u0152\7v\2\2\u0152\u0155\7q\2\2\u0153\u0155\7\u81f5\2"+
		"\2\u0154\u0151\3\2\2\2\u0154\u0153\3\2\2\2\u0155b\3\2\2\2\u0156\u0157"+
		"\7w\2\2\u0157\u0158\7p\2\2\u0158\u0159\7v\2\2\u0159\u015a\7k\2\2\u015a"+
		"\u015e\7n\2\2\u015b\u015c\7\u76f6\2\2\u015c\u015e\7\u5232\2\2\u015d\u0156"+
		"\3\2\2\2\u015d\u015b\3\2\2\2\u015ed\3\2\2\2\u015f\u0160\7r\2\2\u0160\u0161"+
		"\7t\2\2\u0161\u0162\7k\2\2\u0162\u0163\7p\2\2\u0163\u0167\7v\2\2\u0164"+
		"\u0165\7\u5372\2\2\u0165\u0167\7\u51fc\2\2\u0166\u015f\3\2\2\2\u0166\u0164"+
		"\3\2\2\2\u0167f\3\2\2\2\u0168\u0169\7r\2\2\u0169\u016a\7t\2\2\u016a\u016b"+
		"\7k\2\2\u016b\u016c\7p\2\2\u016c\u016d\7v\2\2\u016d\u016e\7n\2\2\u016e"+
		"\u0173\7p\2\2\u016f\u0170\7\u5372\2\2\u0170\u0171\7\u51fc\2\2\u0171\u0173"+
		"\7\u884e\2\2\u0172\u0168\3\2\2\2\u0172\u016f\3\2\2\2\u0173h\3\2\2\2\u0174"+
		"\u0175\t\3\2\2\u0175j\3\2\2\2\u0176\u0177\t\4\2\2\u0177l\3\2\2\2\u0178"+
		"\u0179\t\5\2\2\u0179n\3\2\2\2\u017a\u017b\t\6\2\2\u017bp\3\2\2\2\u017c"+
		"\u017d\t\7\2\2\u017dr\3\2\2\2\u017e\u0182\7@\2\2\u017f\u0180\7\u5929\2"+
		"\2\u0180\u0182\7\u65be\2\2\u0181\u017e\3\2\2\2\u0181\u017f\3\2\2\2\u0182"+
		"t\3\2\2\2\u0183\u0187\7>\2\2\u0184\u0185\7\u5c11\2\2\u0185\u0187\7\u65be"+
		"\2\2\u0186\u0183\3\2\2\2\u0186\u0184\3\2\2\2\u0187v\3\2\2\2\u0188\u0189"+
		"\7@\2\2\u0189\u018e\7?\2\2\u018a\u018b\7\u5929\2\2\u018b\u018c\7\u7b4b"+
		"\2\2\u018c\u018e\7\u65be\2\2\u018d\u0188\3\2\2\2\u018d\u018a\3\2\2\2\u018e"+
		"x\3\2\2\2\u018f\u0190\7>\2\2\u0190\u0195\7?\2\2\u0191\u0192\7\u5c11\2"+
		"\2\u0192\u0193\7\u7b4b\2\2\u0193\u0195\7\u65be\2\2\u0194\u018f\3\2\2\2"+
		"\u0194\u0191\3\2\2\2\u0195z\3\2\2\2\u0196\u0197\7?\2\2\u0197\u019a\7?"+
		"\2\2\u0198\u019a\7\u6631\2\2\u0199\u0196\3\2\2\2\u0199\u0198\3\2\2\2\u019a"+
		"|\3\2\2\2\u019b\u019c\7#\2\2\u019c\u01a0\7?\2\2\u019d\u019e\7\u4e0f\2"+
		"\2\u019e\u01a0\7\u6631\2\2\u019f\u019b\3\2\2\2\u019f\u019d\3\2\2\2\u01a0"+
		"~\3\2\2\2\u01a1\u01a3\t\b\2\2\u01a2\u01a1\3\2\2\2\u01a3\u01a4\3\2\2\2"+
		"\u01a4\u01a2\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u0080\3\2\2\2\u01a6\u01aa"+
		"\7$\2\2\u01a7\u01a9\n\t\2\2\u01a8\u01a7\3\2\2\2\u01a9\u01ac\3\2\2\2\u01aa"+
		"\u01a8\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01ad\3\2\2\2\u01ac\u01aa\3\2"+
		"\2\2\u01ad\u01ae\7$\2\2\u01ae\u0082\3\2\2\2\u01af\u01b0\7v\2\2\u01b0\u01b1"+
		"\7t\2\2\u01b1\u01b2\7w\2\2\u01b2\u01bb\7g\2\2\u01b3\u01bb\7\u7721\2\2"+
		"\u01b4\u01b5\7h\2\2\u01b5\u01b6\7c\2\2\u01b6\u01b7\7n\2\2\u01b7\u01b8"+
		"\7u\2\2\u01b8\u01bb\7g\2\2\u01b9\u01bb\7\u5049\2\2\u01ba\u01af\3\2\2\2"+
		"\u01ba\u01b3\3\2\2\2\u01ba\u01b4\3\2\2\2\u01ba\u01b9\3\2\2\2\u01bb\u0084"+
		"\3\2\2\2\u01bc\u01c0\5K&\2\u01bd\u01c0\5M\'\2\u01be\u01c0\5O(\2\u01bf"+
		"\u01bc\3\2\2\2\u01bf\u01bd\3\2\2\2\u01bf\u01be\3\2\2\2\u01c0\u01c1\3\2"+
		"\2\2\u01c1\u01bf\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2\u0086\3\2\2\2\u01c3"+
		"\u01c5\t\n\2\2\u01c4\u01c3\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c6\u01c4\3\2"+
		"\2\2\u01c6\u01c7\3\2\2\2\u01c7\u01c8\3\2\2\2\u01c8\u01c9\bD\2\2\u01c9"+
		"\u0088\3\2\2\2\34\2\u010f\u011c\u0122\u0129\u012f\u0137\u0141\u0148\u014f"+
		"\u0154\u015d\u0166\u0172\u0181\u0186\u018d\u0194\u0199\u019f\u01a4\u01aa"+
		"\u01ba\u01bf\u01c1\u01c6\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}